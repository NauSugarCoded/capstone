<<<<<<< HEAD
{"version":3,"sources":["../../src/pages/home/home.ts","../../src/providers/usersservice/usersservice.ts","../../src/pages/signup/signup.ts","../../src/pages/modules/modules.ts","../../src/pages/select_module/select_module.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/studies/studies.ts","../../src/pages/questions/questions.ts","../../src/pages/login/login.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/pages/select_study/select_study.ts","../../src/providers/database/database.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAA0C;AACI;AAO9C;IAEE,kBAAmB,OAAsB;QAAtB,YAAO,GAAP,OAAO,CAAe;IAEzC,CAAC;IAJU,QAAQ;QAJpB,wEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;WACG;SACzB,CAAC;iBAGyC;OAF9B,QAAQ,CAMpB;IAAD,CAAC;AAAA;SANY,QAAQ,e;;;;;;;;;;;;;;;;;;;;;ACRsB;AACN;AAErC;;;;;EAKE;AAEF;IAME;QACE,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;QAEnD,IAAI,CAAC,QAAQ,GAAG,8CAAa,EAAE,CAAC;QAChC,IAAI,CAAC,WAAW,GAAG,kDAAiB,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACtD,CAAC;IAED,+CAAgB,GAAhB,UAAiB,KAAa,EAAE,QAAgB;QAC9C,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,0BAA0B,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IACnE,CAAC;IAED,gDAAiB,GAAjB,UAAkB,KAAY,EAAE,QAAgB;QAAhD,iBASC;QAPC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,8BAA8B,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO;YAChF,kBAAkB;YAClB,KAAI,CAAC,QAAQ,CAAC,0BAA0B,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAC,iBAAiB;gBACjF,uCAAuC;YACvC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IAEL,CAAC;IA1BU,oBAAoB;QADhC,yEAAU,EAAE;;OACA,oBAAoB,CA2BhC;IAAD,2BAAC;CAAA;AA3BgC;;;;;;;;;;;;;;;;;;;;;;;ACVS;AACmD;AACZ;AACzC;AAIxC;;;;;GAKG;AAQH;IAQE,oBACS,oBAA0C,EAC1C,OAAsB,EACtB,SAAoB,EACpB,SAA0B,EAC1B,WAA8B;QAJ9B,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACpB,cAAS,GAAT,SAAS,CAAiB;QAC1B,gBAAW,GAAX,WAAW,CAAmB;IACvC,CAAC;IAED,mCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;IAC3C,CAAC;IAED,6BAAQ,GAAR;QAAA,iBA4BC;QA1BC,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACnC,OAAO,EAAE,gBAAgB;SAC1B,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,EAAE,CAAC;QAEjB,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,kBAAQ;YAClF,MAAM,CAAC,OAAO,EAAE,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,4DAAQ,CAAC,CAAC;QAEjC,CAAC,EAAE,eAAK;YACN,MAAM,CAAC,OAAO,EAAE,CAAC;YAEjB,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBACpB,OAAO,EAAE,KAAK;gBACd,QAAQ,EAAE,IAAI;gBACd,QAAQ,EAAE,KAAK;aAChB,CAAC,CAAC,OAAO,EAAE,CAAC;YAEb,IAAI,CAAC,QAAQ,GAAG,EAAE;QACpB,CAAC,CAAC,CAAC;IAKL,CAAC;IAhDU,UAAU;QALtB,wEAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,WAAW,mGAAe;WACO;SAClC,CAAC;iFAUmD;YACjC,iEAAa;YACX,sEAAS;YACT,wEAAe;YACb,OAAiB;OAb5B,UAAU,CAkDtB;IAAD,CAAC;AAAA;SAlDY,UAAU,e;;;;;;;;;;;;;;;;;;;;;;ACpBmB;AACe;AACQ;AACI;AAErE;;;;;GAKG;AAOH;IA8CE,qBAAmB,OAAsB,EAAS,SAAoB,EAAW,GAA0B;QAAxF,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAW,QAAG,GAAH,GAAG,CAAuB;QAzC3G;;;;;WAKG;QACK,UAAK,GAAiB,SAAS,CAAC;QAKxC;;;;;WAKG;QACK,SAAI,GAAiB,sBAAsB,CAAC;QA0BlD,IAAI,CAAC,QAAQ,GAAG;YACb,IAAI,EAAG,MAAM;YACb,KAAK,EAAE,SAAS;YAChB,IAAI,EAAG,WAAW;SACpB,CAAC;IAEJ,CAAC;IAGA;;;;;;;OAOG;IACH,qCAAe,GAAf;QAEG,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC7B,CAAC;IAED;;;;;;;;OAQG;IACH,mDAA6B,GAA7B;QAEG,IAAI,CAAC,GAAG,CAAC,yBAAyB,CAAC,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,QAAQ,CAAC;aAChD,IAAI,CAAC,UAAC,IAAU;YAEd,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAW;YAEhB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACN,CAAC;IAID;;;;;;;OAOG;IACH,wCAAkB,GAAlB;QAAA,iBAsBC;QApBE,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;aAC9B,IAAI,CAAC,UAAC,IAAI;YAGR,mEAAmE;YACnE,mBAAmB;YACnB,EAAE,EAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CACrB,CAAC;gBACE,KAAI,CAAC,6BAA6B,EAAE,CAAC;YACxC,CAAC;YAKD,IAAI,CACJ,CAAC;gBACE,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACzB,CAAC;QACJ,CAAC,CAAC;aACD,KAAK,EAAE,CAAC;IACZ,CAAC;IAED,iCAAW,GAAX;QAEG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACxC,CAAC;IAIF,oCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;IAC5C,CAAC;IAED,gCAAU,GAAV,UAAW,KAAK,EAAE,IAAI;QACpB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,sFAAgB,CAAC,CAAC;IACtC,CAAC;IA7IU,WAAW;QAJvB,wEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;WACG;SAC5B,CAAC;oBA+C2G;OA9ChG,WAAW,CAkJvB;IAAD,CAAC;AAAA;SAlJY,WAAW,e;;;;;;;;;;;;;;;;;;;;ACjBkB;AACe;AAEzD;;;;;GAKG;AAOH;IAEE,0BAAmB,OAAsB,EAAS,SAAoB;QAAnD,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;IACtE,CAAC;IAED,yCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;IACjD,CAAC;IAPU,gBAAgB;QAJ5B,wEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;WACG;SAClC,CAAC;yBAGsE;OAF3D,gBAAgB,CAU5B;IAAD,CAAC;AAAA;SAVY,gBAAgB,gB;;;;;;;ACf7B;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;;;;;;;;AC9C0C;AACgC;AACZ;AACO;AAMrE;IA4CE,qBAAmB,OAAwB,EACvB,GAA0B,EAC1B,MAAyB;QAF1B,YAAO,GAAP,OAAO,CAAiB;QACvB,QAAG,GAAH,GAAG,CAAuB;QAC1B,WAAM,GAAN,MAAM,CAAmB;QA5C7C;;;;;WAKG;QACK,UAAK,GAAiB,SAAS,CAAC;QAKxC;;;;;WAKG;QACK,SAAI,GAAiB,uBAAuB,CAAC;QA6BlD,IAAI,CAAC,QAAQ,GAAG;YACb,SAAS,EAAG,MAAM;YAClB,QAAQ,EAAG,EAAE;SACf,CAAC;IACL,CAAC;IAKD;;;;;;;OAOG;IACH,qCAAe,GAAf;QAEG,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC7B,CAAC;IAKD;;;;;;;;OAQG;IACH,mDAA6B,GAA7B;QAEG,IAAI,CAAC,GAAG,CAAC,yBAAyB,CAAC,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,QAAQ,CAAC;aAChD,IAAI,CAAC,UAAC,IAAU;YAEd,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAW;YAEhB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACN,CAAC;IAKD;;;;;;;OAOG;IACH,wCAAkB,GAAlB;QAAA,iBAsBC;QApBE,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;aAC9B,IAAI,CAAC,UAAC,IAAI;YAGR,mEAAmE;YACnE,mBAAmB;YACnB,EAAE,EAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CACrB,CAAC;gBACE,KAAI,CAAC,6BAA6B,EAAE,CAAC;YACxC,CAAC;YAKD,IAAI,CACJ,CAAC;gBACE,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACzB,CAAC;QACJ,CAAC,CAAC;aACD,KAAK,EAAE,CAAC;IACZ,CAAC;IAKD;;;;;;OAMG;IACH,iCAAW,GAAX;QAEG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACrC,CAAC;IAKD;;;;;;;OAOG;IACH,oCAAc,GAAd,UAAe,GAAG;QAEf,IAAI,MAAM,GAAS;YAChB,UAAU,EAAK,IAAI,CAAC,KAAK;YACzB,QAAQ,EAAO,GAAG;SACpB,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,MAAM,EAAG,MAAM,EAAE,QAAQ,EAAG,IAAI,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED;;;;;;;OAOG;IACH,kCAAY,GAAZ,UAAa,GAAG;QAEb,IAAI,MAAM,GAAS;YAChB,UAAU,EAAK,IAAI,CAAC,KAAK;YACzB,QAAQ,EAAO,GAAG;SACpB,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,MAAM,EAAG,MAAM,EAAE,QAAQ,EAAG,IAAI,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED;;;;;;;;OAQG;IACH,oCAAc,GAAd,UAAe,GAAG;QAAlB,iBAYC;QAVE,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EACtB,GAAG,CAAC,EAAE,CAAC;aAClB,IAAI,CAAC,UAAC,IAAU;YAEd,KAAI,CAAC,YAAY,CAAC,SAAS,EAAE,aAAa,GAAG,GAAG,CAAC,IAAI,GAAG,2BAA2B,CAAC,CAAC;QACxF,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAW;YAEhB,KAAI,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACN,CAAC;IAKD;;;;;;;;OAQG;IACH,kCAAY,GAAZ,UAAa,KAAmB,EACnB,OAAmB;QADhC,iBAeC;QAZE,IAAI,KAAK,GAAa,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YACtC,KAAK,EAAQ,KAAK;YAClB,QAAQ,EAAK,OAAO;YACpB,OAAO,EAAM,CAAC;oBACb,IAAI,EAAQ,SAAS;oBACrB,OAAO,EAAK;wBAEV,KAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC5B,CAAC;iBACF,CAAC;SACH,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAED,gCAAU,GAAV,UAAW,KAAK,EAAE,IAAI;QACpB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,mFAAe,CAAC,CAAC;IACrC,CAAC;IA9OU,WAAW;QAJvB,wEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;WACG;SAC5B,CAAC;oBA+C6C;OA9ClC,WAAW,CA+OvB;IAAD,eAAC;;AAAA;SA/OY,WAAW,e;;;;;;;;;;;;;;;;;;;;;ACTkB;AACqB;AACM;AAMrE;IA8CG,uBAAmB,OAAwB,EACvB,GAA0B,EAC1B,MAAyB;QAF1B,YAAO,GAAP,OAAO,CAAiB;QACvB,QAAG,GAAH,GAAG,CAAuB;QAC1B,WAAM,GAAN,MAAM,CAAmB;QA5C7C;;;;;WAKG;QACK,UAAK,GAAiB,WAAW,CAAC;QAK1C;;;;;WAKG;QACK,SAAI,GAAiB,eAAe,CAAC;QA6B1C,IAAI,CAAC,QAAQ,GAAG;YACb,IAAI,EAAG,QAAQ;YACf,IAAI,EAAG,SAAS;YAChB,KAAK,EAAG,yCAAyC;SACnD,CAAC;IACL,CAAC;IAKD;;;;;;;OAOG;IACH,uCAAe,GAAf;QAEG,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC7B,CAAC;IAKD;;;;;;;;OAQG;IACH,qDAA6B,GAA7B;QAEG,IAAI,CAAC,GAAG,CAAC,yBAAyB,CAAC,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,QAAQ,CAAC;aAChD,IAAI,CAAC,UAAC,IAAU;YAEd,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAW;YAEhB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACN,CAAC;IAKD;;;;;;;OAOG;IACH,0CAAkB,GAAlB;QAAA,iBAsBC;QApBE,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;aAChC,IAAI,CAAC,UAAC,IAAI;YAGR,mEAAmE;YACnE,mBAAmB;YACnB,EAAE,EAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CACrB,CAAC;gBACE,KAAI,CAAC,6BAA6B,EAAE,CAAC;YACxC,CAAC;YAKD,IAAI,CACJ,CAAC;gBACE,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACzB,CAAC;QACJ,CAAC,CAAC;aACD,KAAK,EAAE,CAAC;IACZ,CAAC;IAKD;;;;;;OAMG;IACH,mCAAW,GAAX;QAEG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACxC,CAAC;IAKD;;;;;;;OAOG;IACH,sCAAc,GAAd,UAAe,GAAG;QAEf,IAAI,MAAM,GAAS;YAChB,UAAU,EAAK,IAAI,CAAC,KAAK;YACzB,QAAQ,EAAO,GAAG;SACpB,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAG,MAAM,EAAE,QAAQ,EAAG,IAAI,EAAE,CAAC,CAAC;IAC9E,CAAC;IAKD;;;;;;;;OAQG;IACH,sCAAc,GAAd,UAAe,GAAG;QAAlB,iBAYC;QAVE,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAC5B,GAAG,CAAC,EAAE,CAAC;aACZ,IAAI,CAAC,UAAC,IAAU;YAEd,KAAI,CAAC,YAAY,CAAC,SAAS,EAAE,aAAa,GAAG,GAAG,CAAC,IAAI,GAAG,2BAA2B,CAAC,CAAC;QACxF,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAW;YAEhB,KAAI,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACN,CAAC;IAKD;;;;;;;;OAQG;IACH,oCAAY,GAAZ,UAAa,KAAmB,EACnB,OAAmB;QADhC,iBAeC;QAZE,IAAI,KAAK,GAAa,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YACtC,KAAK,EAAQ,KAAK;YAClB,QAAQ,EAAK,OAAO;YACpB,OAAO,EAAM,CAAC;oBACb,IAAI,EAAQ,SAAS;oBACrB,OAAO,EAAK;wBAEV,KAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC5B,CAAC;iBACF,CAAC;SACH,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IA/NS,aAAa;QAJzB,wEAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;WACG;SAC9B,CAAC;mGA+C4C;YACb,uEAAgB;YAChB,UAAe;OAhDnC,aAAa,CAiOzB;IAAD,CAAC;AAAA;SAjOY,aAAa,e;;;;;;;;;;;;;;;;;;;;;;;;;ACRgB;AACF;AACM;AAC+C;AACxD;AAC4C;AAEjF;;;;;GAKG;AAQH;IAKE,mBACS,YAAkC,EAClC,WAA8B,EAC9B,SAA0B,EAC1B,OAAsB,EACtB,SAAoB;QAJpB,iBAAY,GAAZ,YAAY,CAAsB;QAClC,gBAAW,GAAX,WAAW,CAAmB;QAC9B,cAAS,GAAT,SAAS,CAAiB;QAC1B,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QAEzB,8CAAa,EAAE,CAAC,kBAAkB,CAAC,UAAS,IAAI;YAC9C,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACT,qBAAqB;gBACrB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,4DAAQ,CAAC,CAAC;gBAC5B,MAAM;YACR,CAAC;QACH,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,kCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;IAC1C,CAAC;IAED,+BAAW,GAAX;QAAA,iBA2BC;QAzBC,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACnC,OAAO,EAAE,iBAAiB;SAC3B,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,EAAE,CAAC;QAGjB,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,kBAAQ;YACzE,YAAY;YACZ,MAAM,CAAC,OAAO,EAAE,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,4DAAQ,CAAC,CAAC;QACjC,CAAC,EAAE,eAAK;YACN,MAAM,CAAC,OAAO,EAAE,CAAC;YACf,kBAAkB;YAClB,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChC,OAAO,EAAE,KAAK;gBACd,QAAQ,EAAE,IAAI;gBACd,QAAQ,EAAE,KAAK;aAChB,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;YAEpB,IAAI,CAAC,QAAQ,GAAG,EAAE,EAAC,sBAAsB;QACzC,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,kCAAc,GAAd;IAEA,CAAC;IAED,oCAAgB,GAAhB;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,kEAAU,CAAC,CAAC;IAChC,CAAC;IA7DU,SAAS;QALrB,wEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,WAAW,mGAAc;WACQ;SAClC,CAAC;qFAO2C;YACrB,uEAAiB;YACnB,qEAAe;YACjB,kEAAa;YACX,MAAS;OAVlB,SAAS,CAkErB;IAAD,CAAC;AAAA;SAlEY,SAAS,e;;;;;;;;;;;ACpBqD;AAElC;AAEzC,yGAAsB,EAAE,CAAC,eAAe,CAAC,8DAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJM;AACH;AACkB;AACjB;AAEhB;AACM;AACS;AAEA;AACN;AACG;AACS;AAEW;AAEnB;AACM;AACtB;AACyC;AACZ;AAGlE,sBAAsB;AACf,IAAM,MAAM,GAAG;IACpB,MAAM,EAAE,yCAAyC;IACjD,UAAU,EAAE,gCAAgC;IAC5C,WAAW,EAAE,uCAAuC;IACpD,SAAS,EAAE,gBAAgB;IAC3B,aAAa,EAAE,4BAA4B;IAC3C,iBAAiB,EAAE,cAAc;CAClC,CAAC;AACF,wDAAsB,CAAC,MAAM,CAAC,CAAC;AAiD/B;IAAA;IAAwB,CAAC;IAAZ,SAAS;QA/CrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,6DAAK;gBACL,kEAAQ;gBACR,2EAAW;gBACX,2EAAW;gBACX,qEAAS;gBACT,wEAAU;gBACV,kFAAa;gBACb,6FAAgB;aACjB;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,8EAAgB;gBAChB,kEAAW,CAAC,OAAO,CAAC,6DAAK,EAAE,EAAE,EACjC;oBACE,KAAK,EAAE;wBACL,EAAE,YAAY,EAAE,uEAAuE,EAAE,IAAI,EAAE,mBAAmB,EAAE,OAAO,EAAE,gBAAgB,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;wBACpL,EAAE,YAAY,EAAE,iEAAiE,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;wBACvK,EAAE,YAAY,EAAE,0EAA0E,EAAE,IAAI,EAAE,iBAAiB,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;wBACtL,EAAE,YAAY,EAAE,6CAA6C,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;wBACzI,EAAE,YAAY,EAAE,mDAAmD,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;wBACnJ,EAAE,YAAY,EAAE,oEAAoE,EAAE,IAAI,EAAE,kBAAkB,EAAE,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;wBAC/K,EAAE,YAAY,EAAE,iEAAiE,EAAE,IAAI,EAAE,iBAAiB,EAAE,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;wBAC1K,EAAE,YAAY,EAAE,gDAAgD,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;qBAC/I;iBACF,CAAC;aACC;YACD,SAAS,EAAE,CAAC,+DAAQ,CAAC;YACrB,eAAe,EAAE;gBACf,6DAAK;gBACL,kEAAQ;gBACR,2EAAW;gBACX,2EAAW;gBACX,qEAAS;gBACT,wEAAU;gBACV,kFAAa;gBACb,6FAAgB;aACjB;YACD,SAAS,EAAE;gBACT,4EAAS;gBACT,kFAAY;gBACZ,EAAC,OAAO,EAAE,mEAAY,EAAE,QAAQ,EAAE,wEAAiB,EAAC;gBACpD,mGAAoB;gBACpB,uFAAgB;aACjB;SACF,CAAC;OACW,SAAS,CAAG;IAAD,gBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjF+B;AACP;AACO;AACM;AAEb;AACS;AAEA;AAEM;AAQ7D;IAOE,eAAmB,QAAkB,EAAS,SAAoB,EAAS,YAA0B;QAAlF,aAAQ,GAAR,QAAQ,CAAU;QAAS,cAAS,GAAT,SAAS,CAAW;QAAS,iBAAY,GAAZ,YAAY,CAAc;QAJrG,aAAQ,GAAO,kEAAQ,CAAC;QAQtB,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,8CAA8C;QAC9C,IAAI,CAAC,KAAK,GAAG;YACX,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAQ,EAAE;YACtC,EAAE,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,2EAAW,EAAE;YAC/C,EAAE,KAAK,EAAE,cAAc,EAAE,SAAS,EAAE,iFAAa,EAAE;YACnD,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAW,EAAE;SAC7C,CAAC;IAEJ,CAAC;IAED,6BAAa,GAAb;QAAA,iBAOC;QANC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACzB,gEAAgE;YAChE,iEAAiE;YACjE,KAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;YAC9B,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wBAAQ,GAAR,UAAS,IAAI;QACX,+CAA+C;QAC/C,4DAA4D;QAC5D,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACnC,CAAC;IAnCe;QAAf,yEAAS,CAAC,0DAAG,CAAC;kCAAM,0DAAG;sCAAC;IADd,KAAK;QAJjB,wEAAS,CAAC;WACc;SAExB,CAAC;cAQqG;OAP1F,KAAK,CAqCjB;IAAD,CAAC;AAAA;SArCY,KAAK,2B;;;;;;;;;;;;;;;;;;;;AClBwB;AACe;AAEzD;;;;;GAKG;AAOH;IAEE,yBAAmB,OAAsB,EAAS,SAAoB;QAAnD,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;IACtE,CAAC;IAED,wCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;IAChD,CAAC;IAPU,eAAe;QAJ3B,wEAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,WAAW,EAAE,mBAAmB;SACjC,CAAC;yCAG4B,oEAAa,EAAoB,gEAAS;OAF3D,eAAe,CAS3B;IAAD,sBAAC;CAAA;AAT2B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfsB;AACP;AACZ;AAE/B,gCAAgC;AACK;AACT;AAE5B;;;;;EAKE;AAEF;IAIE,0BAAmB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QACjC,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;QACxD,IAAI,CAAC,GAAG,GAAG,mDAAkB,EAAE,CAAC;IAClC,CAAC;IAED;;;;;MAKE;IAEF,oDAAyB,GAAzB,UAA0B,aAAqB,EACrB,KAAa,EACb,OAAY;QAFtC,iBAeC;QAZE,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,KAAI,CAAC,GAAG;iBACP,UAAU,CAAC,aAAa,CAAC;iBACzB,GAAG,CAAC,KAAK,CAAC;iBACV,GAAG,CAAC,OAAO,EAAE,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC;iBAC3B,IAAI,CAAC,UAAC,IAAU;gBACf,OAAO,CAAC,IAAI,CAAC,CAAC;YAChB,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAU;gBAChB,MAAM,CAAC,KAAK,CAAC,CAAC;YAChB,CAAC,CAAC;QACJ,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IAEH,uCAAY,GAAZ,UAAa,aAAqB;QAAlC,iBAuBC;QAtBC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,KAAI,CAAC,GAAG,CAAC,UAAU,CAAC,aAAa,CAAC;iBACjC,GAAG,EAAE;iBACL,IAAI,CAAC,UAAC,aAAa;gBAClB,IAAI,GAAG,GAAS,EAAE,CAAC;gBAEnB,aAAa;qBACZ,OAAO,CAAC,UAAC,GAAQ;oBAChB,GAAG,CAAC,IAAI,CAAC;wBACR,EAAE,EAAe,GAAG,CAAC,EAAE;wBACvB,IAAI,EAAa,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI;wBAChC,IAAI,EAAO,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI;wBAC1B,KAAK,EAAM,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK;qBAC3B,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBAEH,OAAO,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAW;gBACjB,MAAM,CAAC,KAAK,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IAEH,qCAAU,GAAV,UAAW,aAAqB;QAAhC,iBAuBC;QAtBC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,KAAI,CAAC,GAAG,CAAC,UAAU,CAAC,aAAa,CAAC;iBACjC,GAAG,EAAE;iBACL,IAAI,CAAC,UAAC,aAAa;gBAClB,IAAI,GAAG,GAAS,EAAE,CAAC;gBAEnB,aAAa;qBACZ,OAAO,CAAC,UAAC,GAAQ;oBAChB,GAAG,CAAC,IAAI,CAAC;wBACR,EAAE,EAAe,GAAG,CAAC,EAAE;wBACvB,IAAI,EAAa,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI;wBAChC,KAAK,EAAM,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK;wBAC3B,IAAI,EAAO,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI;qBAC1B,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBAEH,OAAO,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAW;gBACjB,MAAM,CAAC,KAAK,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IAEH,qCAAU,GAAV,UAAW,aAAqB;QAAhC,iBAuBC;QAtBC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,KAAI,CAAC,GAAG,CAAC,UAAU,CAAC,aAAa,CAAC;iBACjC,GAAG,EAAE;iBACL,IAAI,CAAC,UAAC,aAAa;gBAClB,IAAI,GAAG,GAAS,EAAE,CAAC;gBAEnB,aAAa;qBACZ,OAAO,CAAC,UAAC,GAAQ;oBAChB,GAAG,CAAC,IAAI,CAAC;wBACR,EAAE,EAAe,GAAG,CAAC,EAAE;wBACvB,SAAS,EAAa,GAAG,CAAC,IAAI,EAAE,CAAC,SAAS;wBAC1C,QAAQ,EAAM,GAAG,CAAC,IAAI,EAAE,CAAC,QAAQ;wBACjC,UAAU,EAAO,GAAG,CAAC,IAAI,EAAE,CAAC,UAAU;qBACtC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBAEH,OAAO,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAW;gBACjB,MAAM,CAAC,KAAK,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IAEH,sCAAW,GAAX,UAAY,aAAsB,EACtB,OAAa;QADzB,iBAWC;QATC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,KAAI,CAAC,GAAG,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC;iBAC9C,IAAI,CAAC,UAAC,GAAS;gBACd,OAAO,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAW;gBACjB,MAAM,CAAC,KAAK,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IAEF,yCAAc,GAAd,UAAe,aAAsB,EACtB,KAAc;QAD7B,iBAcE;QAZC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,KAAI,CAAC,GAAG;iBACP,UAAU,CAAC,aAAa,CAAC;iBACzB,GAAG,CAAC,KAAK,CAAC;iBACV,MAAM,EAAE;iBACR,IAAI,CAAC,UAAC,GAAS;gBACd,OAAO,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAW;gBACjB,MAAM,CAAC,KAAK,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IAEH,yCAAc,GAAd,UAAe,aAAsB,EACrB,KAAc,EACd,OAAa;QAF7B,iBAeC;QAZC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,KAAI,CAAC,GAAG;iBACP,UAAU,CAAC,aAAa,CAAC;iBACzB,GAAG,CAAC,KAAK,CAAC;iBACV,MAAM,CAAC,OAAO,CAAC;iBACf,IAAI,CAAC,UAAC,GAAS;gBACd,OAAO,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAW;gBACjB,MAAM,CAAC,KAAK,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAY,GAAZ,UAAa,aAAsB,EACnB,KAAc,EACd,OAAa;QAF7B,iBAcC;QAXC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,KAAI,CAAC,GAAG;iBACP,UAAU,CAAC,aAAa,CAAC;iBACzB,GAAG,CAAC,KAAK,CAAC;iBACV,IAAI,CAAC,UAAC,GAAS;gBACd,OAAO,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAW;gBACjB,MAAM,CAAC,KAAK,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAhMQ,gBAAgB;QAD5B,yEAAU,EAAE;6DAKc,wEAAU,oBAAV,wEAAU;OAJxB,gBAAgB,CAkM5B;IAAD,uBAAC;;CAAA;AAlM4B","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { NavController } from 'ionic-angular';\r\n\r\n\r\n@Component({\r\n  selector: 'page-home',\r\n  templateUrl: 'home.html'\r\n})\r\nexport class HomePage {\r\n\r\n  constructor(public navCtrl: NavController) {\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Injectable } from '@angular/core';\r\nimport * as firebase from 'firebase';\r\n\r\n/*\r\n  Generated class for the UsersserviceProvider provider.\r\n\r\n  See https://angular.io/guide/dependency-injection for more info on providers\r\n  and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class UsersserviceProvider {\r\n\r\n  public data: any;\r\n  public fireAuth: any;\r\n  public userProfile: any;\r\n\r\n  constructor() {\r\n    console.log('Hello UsersserviceProvider Provider');\r\n\r\n    this.fireAuth = firebase.auth();\r\n    this.userProfile = firebase.database().ref('Users');\r\n  }\r\n\r\n  loginUserService(email: string, password: string): any {\r\n    return this.fireAuth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  signupUserService(email:string, password: string): any {\r\n\r\n    return this.fireAuth.createUserWithEmailAndPassword(email, password).then((newUser) => {\r\n      //sign in the user\r\n      this.fireAuth.signInWithEmailAndPassword(email, password).then((authenticatedUser) => {\r\n      //successful login, create user profile\r\n      });\r\n    });\r\n\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/usersservice/usersservice.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, LoadingController, ToastController } from 'ionic-angular';\r\nimport { UsersserviceProvider } from '../../providers/usersservice/usersservice';\r\nimport { HomePage } from '../home/home';\r\n\r\nimport * as firebase from 'firebase';\r\n\r\n/**\r\n * Generated class for the SignupPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-signup',\r\n  templateUrl: 'signup.html',\r\n  providers: [UsersserviceProvider]\r\n})\r\nexport class SignupPage {\r\n\r\n  public email: string;\r\n  public password: any;\r\n  public phone: any;\r\n  public first_name: any;\r\n  public last_name: any;\r\n\r\n  constructor(\r\n    public usersserviceProvider: UsersserviceProvider,\r\n    public navCtrl: NavController,\r\n    public navParams: NavParams,\r\n    public toastCtrl: ToastController,\r\n    public loadingCtrl: LoadingController) {\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    console.log('ionViewDidLoad SignupPage');\r\n  }\r\n\r\n  doSignup() {\r\n\r\n    var that = this;\r\n\r\n    var loader = this.loadingCtrl.create({\r\n      content: \"Please wait...\",\r\n    });\r\n    loader.present();\r\n\r\n    this.usersserviceProvider.signupUserService(this.email, this.password).then(authData => {\r\n      loader.dismiss();\r\n      that.navCtrl.setRoot(HomePage);\r\n\r\n    }, error => {\r\n      loader.dismiss();\r\n\r\n      this.toastCtrl.create({\r\n        message: error,\r\n        duration: 9000,\r\n        position: 'top'\r\n      }).present();\r\n\r\n      that.password = \"\"\r\n    });\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signup/signup.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { SelectModulePage } from \"../select_module/select_module\"\r\nimport { DatabaseProvider } from '../../providers/database/database';\r\n\r\n/**\r\n * Generated class for the ModulesPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-modules',\r\n  templateUrl: 'modules.html',\r\n})\r\nexport class ModulesPage {\r\n\r\n  icons: string[];\r\n  items: Array<{title: string, note: string, icon: string}>;\r\n\r\n  /**\r\n   * @name _COLL\r\n   * @type {string}\r\n   * @private\r\n   * @description      Defines the name of the database collection\r\n   */\r\n  private _COLL \t\t: string \t\t\t= \"Modules\";\r\n\r\n\r\n\r\n\r\n  /**\r\n   * @name _DOC\r\n   * @type {string}\r\n   * @private\r\n   * @description      Defines the initial document ID for the database collection\r\n   */\r\n  private _DOC \t\t: string \t\t\t= \"lNE0Z5IRAWtMJN4BujuD\";\r\n\r\n\r\n\r\n\r\n  /**\r\n   * @name _CONTENT\r\n   * @type {any}\r\n   * @private\r\n   * @description      Used to store/provide the initial document data for the database collection\r\n   */\r\n  private _CONTENT  \t: any;\r\n\r\n\r\n\r\n  /**\r\n   * @name locations\r\n   * @type {any}\r\n   * @public\r\n   * @description      Property to store the returned documents from the database collection\r\n   */\r\n  public locations     : any;\r\n\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams,  private _DB     : DatabaseProvider) {\r\n\r\n    this._CONTENT = {\r\n       name : \"Test\",\r\n       owner: \"Natasha\",\r\n       type : \"TimeBased\"\r\n    };\r\n\r\n  }\r\n\r\n\r\n   /**\r\n    * Retrieve all documents from the specified collection using the\r\n    * retrieveCollection method when the view is entered\r\n    *\r\n    * @public\r\n    * @method ionViewDidEnter\r\n    * @return {none}\r\n    */\r\n   ionViewDidEnter()\r\n   {\r\n      this.retrieveCollection();\r\n   }\r\n\r\n   /**\r\n    * Creates the collection and populates that with an initial document\r\n    * using the createAndPopulateDocument method of the DatabaseProvider\r\n    * service\r\n    *\r\n    * @public\r\n    * @method generateCollectionAndDocument\r\n    * @return {none}\r\n    */\r\n   generateCollectionAndDocument() : void\r\n   {\r\n      this._DB.createAndPopulateDocument(this._COLL,\r\n                                         this._DOC,\r\n                                         this._CONTENT)\r\n      .then((data : any) =>\r\n      {\r\n         console.dir(data);\r\n      })\r\n      .catch((error : any) =>\r\n      {\r\n         console.dir(error);\r\n      });\r\n   }\r\n\r\n\r\n\r\n   /**\r\n    * Retrieve all documents from the specified collection using the\r\n    * getDocuments method of the DatabaseProvider service\r\n    *\r\n    * @public\r\n    * @method retrieveCollection\r\n    * @return {none}\r\n    */\r\n   retrieveCollection() : void\r\n   {\r\n      this._DB.getModules(this._COLL)\r\n      .then((data) =>\r\n      {\r\n\r\n         // IF we don't have any documents then the collection doesn't exist\r\n         // so we create it!\r\n         if(data.length === 0)\r\n         {\r\n            this.generateCollectionAndDocument();\r\n         }\r\n\r\n         // Otherwise the collection does exist and we assign the returned\r\n         // documents to the public property of locations so this can be\r\n         // iterated through in the component template\r\n         else\r\n         {\r\n            this.locations = data;\r\n         }\r\n      })\r\n      .catch();\r\n   }\r\n\r\n   addDocument() : void\r\n   {\r\n      this.navCtrl.push('create_question');\r\n   }\r\n\r\n\r\n\r\n  ionViewDidLoad() {\r\n    console.log('ionViewDidLoad ModulesPage');\r\n  }\r\n\r\n  itemTapped(event, item) {\r\n    this.navCtrl.push(SelectModulePage);\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/modules/modules.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\n\r\n/**\r\n * Generated class for the SelectModulePage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\n@IonicPage()\r\n@Component({\r\n  selector: 'page-select-module',\r\n  templateUrl: 'select_module.html',\r\n})\r\nexport class SelectModulePage {\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    console.log('ionViewDidLoad SelectModulePage');\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/select_module/select_module.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 195;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 195\n// module chunks = 8","var map = {\n\t\"../pages/create_modules/create_modules.module\": [\n\t\t529,\n\t\t2\n\t],\n\t\"../pages/create_question/create_question.module\": [\n\t\t531,\n\t\t1\n\t],\n\t\"../pages/create_study/create_study.module\": [\n\t\t530,\n\t\t0\n\t],\n\t\"../pages/login/login.module\": [\n\t\t532,\n\t\t7\n\t],\n\t\"../pages/modules/modules.module\": [\n\t\t533,\n\t\t6\n\t],\n\t\"../pages/select_module/select_module.module\": [\n\t\t534,\n\t\t5\n\t],\n\t\"../pages/select_study/select_study.module\": [\n\t\t535,\n\t\t4\n\t],\n\t\"../pages/signup/signup.module\": [\n\t\t536,\n\t\t3\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 236;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 236\n// module chunks = 8","import { Component } from '@angular/core';\r\nimport { NavController, NavParams, AlertController } from 'ionic-angular';\r\nimport { SelectStudyPage } from \"../select_study/select_study\"\r\nimport { DatabaseProvider } from '../../providers/database/database';\r\n\r\n@Component({\r\n  selector: 'page-studies',\r\n  templateUrl: 'studies.html'\r\n})\r\nexport class StudiesPage {\r\n\r\n  /**\r\n   * @name _COLL\r\n   * @type {string}\r\n   * @private\r\n   * @description      Defines the name of the database collection\r\n   */\r\n  private _COLL \t\t: string \t\t\t= \"Studies\";\r\n\r\n\r\n\r\n\r\n  /**\r\n   * @name _DOC\r\n   * @type {string}\r\n   * @private\r\n   * @description      Defines the initial document ID for the database collection\r\n   */\r\n  private _DOC \t\t: string \t\t\t= \"81XU1moWva6onAtMHpYY \";\r\n\r\n\r\n\r\n\r\n  /**\r\n   * @name _CONTENT\r\n   * @type {any}\r\n   * @private\r\n   * @description      Used to store/provide the initial document data for the database collection\r\n   */\r\n  private _CONTENT  \t: any;\r\n\r\n\r\n\r\n  /**\r\n   * @name locations\r\n   * @type {any}\r\n   * @public\r\n   * @description      Property to store the returned documents from the database collection\r\n   */\r\n  public locations     : any;\r\n\r\n\r\n\r\n  constructor(public navCtrl  : NavController,\r\n              private _DB     : DatabaseProvider,\r\n              private _ALERT  : AlertController)\r\n  {\r\n     this._CONTENT = {\r\n        full_name : \"test\",\r\n        abstract : \"\"\r\n     };\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n   * Retrieve all documents from the specified collection using the\r\n   * retrieveCollection method when the view is entered\r\n   *\r\n   * @public\r\n   * @method ionViewDidEnter\r\n   * @return {none}\r\n   */\r\n  ionViewDidEnter()\r\n  {\r\n     this.retrieveCollection();\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n   * Creates the collection and populates that with an initial document\r\n   * using the createAndPopulateDocument method of the DatabaseProvider\r\n   * service\r\n   *\r\n   * @public\r\n   * @method generateCollectionAndDocument\r\n   * @return {none}\r\n   */\r\n  generateCollectionAndDocument() : void\r\n  {\r\n     this._DB.createAndPopulateDocument(this._COLL,\r\n                                        this._DOC,\r\n                                        this._CONTENT)\r\n     .then((data : any) =>\r\n     {\r\n        console.dir(data);\r\n     })\r\n     .catch((error : any) =>\r\n     {\r\n        console.dir(error);\r\n     });\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n   * Retrieve all documents from the specified collection using the\r\n   * getDocuments method of the DatabaseProvider service\r\n   *\r\n   * @public\r\n   * @method retrieveCollection\r\n   * @return {none}\r\n   */\r\n  retrieveCollection() : void\r\n  {\r\n     this._DB.getStudies(this._COLL)\r\n     .then((data) =>\r\n     {\r\n\r\n        // IF we don't have any documents then the collection doesn't exist\r\n        // so we create it!\r\n        if(data.length === 0)\r\n        {\r\n           this.generateCollectionAndDocument();\r\n        }\r\n\r\n        // Otherwise the collection does exist and we assign the returned\r\n        // documents to the public property of locations so this can be\r\n        // iterated through in the component template\r\n        else\r\n        {\r\n           this.locations = data;\r\n        }\r\n     })\r\n     .catch();\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n   * Navigate to the manage-document component to begin adding a new document\r\n   *\r\n   * @public\r\n   * @method addDocument\r\n   * @return {none}\r\n   */\r\n  addDocument() : void\r\n  {\r\n     this.navCtrl.push('create_study');\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n   * Update a document by passing the data to the manage-document component\r\n   *\r\n   * @public\r\n   * @method updateDocument\r\n   * @param  obj          {Object}           The document data we wish to update\r\n   * @return {none}\r\n   */\r\n  updateDocument(obj) : void\r\n  {\r\n     let params : any = {\r\n        collection   : this._COLL,\r\n        location     : obj\r\n     };\r\n     this.navCtrl.push('create_study', { record : params, isEdited : true });\r\n  }\r\n\r\n  /**\r\n   * Update a document by passing the data to the manage-document component\r\n   *\r\n   * @public\r\n   * @method viewDocument\r\n   * @param  obj          {Object}           The document data we wish to update\r\n   * @return {none}\r\n   */\r\n  viewDocument(obj) : void\r\n  {\r\n     let params : any = {\r\n        collection   : this._COLL,\r\n        location     : obj\r\n     };\r\n     this.navCtrl.push('create_study', { record : params, isEdited : true });\r\n  }\r\n\r\n  /**\r\n   * Delete a document from the Cloud Firestore collection using the\r\n   * deleteDocument method of the DatabaseProvider service\r\n   *\r\n   * @public\r\n   * @method deleteDocument\r\n   * @param  obj          {Object}           The document ID for the document we wish to delete\r\n   * @return {none}\r\n   */\r\n  deleteDocument(obj) : void\r\n  {\r\n     this._DB.deleteDocument(this._COLL,\r\n                 obj.id)\r\n     .then((data : any) =>\r\n     {\r\n        this.displayAlert('Success', 'The record ' + obj.name + ' was successfully removed');\r\n     })\r\n     .catch((error : any) =>\r\n     {\r\n        this.displayAlert('Error', error.message);\r\n     });\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n   * Provide feedback to user after an operation has succeeded/failed\r\n   *\r\n   * @public\r\n   * @method displayAlert\r\n   * @param  title          {String}           Heading for alert message\r\n   * @param  message        {String}           Content for alert message\r\n   * @return {none}\r\n   */\r\n  displayAlert(title      : string,\r\n               message    : string) : void\r\n  {\r\n     let alert : any     = this._ALERT.create({\r\n        title      : title,\r\n        subTitle   : message,\r\n        buttons    : [{\r\n         text      : 'Got It!',\r\n         handler   : () =>\r\n         {\r\n           this.retrieveCollection();\r\n         }\r\n       }]\r\n     });\r\n     alert.present();\r\n  }\r\n\r\n  itemTapped(event, item) {\r\n    this.navCtrl.push(SelectStudyPage);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/studies/studies.ts","import { Component } from '@angular/core';\r\nimport { NavController, AlertController } from 'ionic-angular';\r\nimport { DatabaseProvider } from '../../providers/database/database';\r\n\r\n@Component({\r\n  selector: 'page-questions',\r\n  templateUrl: 'questions.html'\r\n})\r\nexport class QuestionsPage {\r\n\r\n\r\n\r\n   /**\r\n    * @name _COLL\r\n    * @type {string}\r\n    * @private\r\n    * @description      Defines the name of the database collection\r\n    */\r\n   private _COLL \t\t: string \t\t\t= \"Questions\";\r\n\r\n\r\n\r\n\r\n   /**\r\n    * @name _DOC\r\n    * @type {string}\r\n    * @private\r\n    * @description      Defines the initial document ID for the database collection\r\n    */\r\n   private _DOC \t\t: string \t\t\t= \"Xy76Re34SdFR1\";\r\n\r\n\r\n\r\n\r\n   /**\r\n    * @name _CONTENT\r\n    * @type {any}\r\n    * @private\r\n    * @description      Used to store/provide the initial document data for the database collection\r\n    */\r\n   private _CONTENT  \t: any;\r\n\r\n\r\n\r\n   /**\r\n    * @name locations\r\n    * @type {any}\r\n    * @public\r\n    * @description      Property to store the returned documents from the database collection\r\n    */\r\n   public locations     : any;\r\n\r\n\r\n\r\n   constructor(public navCtrl  : NavController,\r\n               private _DB     : DatabaseProvider,\r\n               private _ALERT  : AlertController)\r\n   {\r\n      this._CONTENT = {\r\n         name : \"DietQ1\",\r\n         type : \"textbox\",\r\n         qtext : \"Did you over eat during your last meal?\"\r\n      };\r\n   }\r\n\r\n\r\n\r\n\r\n   /**\r\n    * Retrieve all documents from the specified collection using the\r\n    * retrieveCollection method when the view is entered\r\n    *\r\n    * @public\r\n    * @method ionViewDidEnter\r\n    * @return {none}\r\n    */\r\n   ionViewDidEnter()\r\n   {\r\n      this.retrieveCollection();\r\n   }\r\n\r\n\r\n\r\n\r\n   /**\r\n    * Creates the collection and populates that with an initial document\r\n    * using the createAndPopulateDocument method of the DatabaseProvider\r\n    * service\r\n    *\r\n    * @public\r\n    * @method generateCollectionAndDocument\r\n    * @return {none}\r\n    */\r\n   generateCollectionAndDocument() : void\r\n   {\r\n      this._DB.createAndPopulateDocument(this._COLL,\r\n                                         this._DOC,\r\n                                         this._CONTENT)\r\n      .then((data : any) =>\r\n      {\r\n         console.dir(data);\r\n      })\r\n      .catch((error : any) =>\r\n      {\r\n         console.dir(error);\r\n      });\r\n   }\r\n\r\n\r\n\r\n\r\n   /**\r\n    * Retrieve all documents from the specified collection using the\r\n    * getDocuments method of the DatabaseProvider service\r\n    *\r\n    * @public\r\n    * @method retrieveCollection\r\n    * @return {none}\r\n    */\r\n   retrieveCollection() : void\r\n   {\r\n      this._DB.getQuestions(this._COLL)\r\n      .then((data) =>\r\n      {\r\n\r\n         // IF we don't have any documents then the collection doesn't exist\r\n         // so we create it!\r\n         if(data.length === 0)\r\n         {\r\n            this.generateCollectionAndDocument();\r\n         }\r\n\r\n         // Otherwise the collection does exist and we assign the returned\r\n         // documents to the public property of locations so this can be\r\n         // iterated through in the component template\r\n         else\r\n         {\r\n            this.locations = data;\r\n         }\r\n      })\r\n      .catch();\r\n   }\r\n\r\n\r\n\r\n\r\n   /**\r\n    * Navigate to the manage-document component to begin adding a new document\r\n    *\r\n    * @public\r\n    * @method addDocument\r\n    * @return {none}\r\n    */\r\n   addDocument() : void\r\n   {\r\n      this.navCtrl.push('create_question');\r\n   }\r\n\r\n\r\n\r\n\r\n   /**\r\n    * Update a document by passing the data to the manage-document component\r\n    *\r\n    * @public\r\n    * @method updateDocument\r\n    * @param  obj          {Object}           The document data we wish to update\r\n    * @return {none}\r\n    */\r\n   updateDocument(obj) : void\r\n   {\r\n      let params : any = {\r\n         collection   : this._COLL,\r\n         location     : obj\r\n      };\r\n      this.navCtrl.push('create_question', { record : params, isEdited : true });\r\n   }\r\n\r\n\r\n\r\n\r\n   /**\r\n    * Delete a document from the Cloud Firestore collection using the\r\n    * deleteDocument method of the DatabaseProvider service\r\n    *\r\n    * @public\r\n    * @method deleteDocument\r\n    * @param  obj          {Object}           The document ID for the document we wish to delete\r\n    * @return {none}\r\n    */\r\n   deleteDocument(obj) : void\r\n   {\r\n      this._DB.deleteDocument(this._COLL,\r\n      \t\t\t\t\t\tobj.id)\r\n      .then((data : any) =>\r\n      {\r\n         this.displayAlert('Success', 'The record ' + obj.name + ' was successfully removed');\r\n      })\r\n      .catch((error : any) =>\r\n      {\r\n         this.displayAlert('Error', error.message);\r\n      });\r\n   }\r\n\r\n\r\n\r\n\r\n   /**\r\n    * Provide feedback to user after an operation has succeeded/failed\r\n    *\r\n    * @public\r\n    * @method displayAlert\r\n    * @param  title          {String}           Heading for alert message\r\n    * @param  message        {String}           Content for alert message\r\n    * @return {none}\r\n    */\r\n   displayAlert(title      : string,\r\n                message    : string) : void\r\n   {\r\n      let alert : any     = this._ALERT.create({\r\n         title      : title,\r\n         subTitle   : message,\r\n         buttons    : [{\r\n          text      : 'Got It!',\r\n          handler   : () =>\r\n          {\r\n            this.retrieveCollection();\r\n          }\r\n        }]\r\n      });\r\n      alert.present();\r\n   }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/questions/questions.ts","import { Component } from '@angular/core';\r\nimport { HomePage } from '../home/home';\r\nimport { SignupPage } from '../signup/signup';\r\nimport { IonicPage, NavController, NavParams, LoadingController, ToastController } from 'ionic-angular';\r\nimport * as firebase from 'firebase';\r\nimport { UsersserviceProvider } from '../../providers/usersservice/usersservice';\r\n\r\n/**\r\n * Generated class for the LoginPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-login',\r\n  templateUrl: 'login.html',\r\n  providers: [UsersserviceProvider]\r\n})\r\nexport class LoginPage {\r\n\r\n  public email: string;\r\n  public password: string;\r\n\r\n  constructor(\r\n    public usersService: UsersserviceProvider,\r\n    public loadingCtrl: LoadingController,\r\n    public toastCtrl: ToastController,\r\n    public navCtrl: NavController,\r\n    public navParams: NavParams) {\r\n\r\n      firebase.auth().onAuthStateChanged(function(user) {\r\n        if (user) {\r\n          // User is signed in.\r\n          this.navCtrl.push(HomePage);\r\n          // ...\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    console.log('ionViewDidLoad LoginPage');\r\n  }\r\n\r\n  submitLogin() {\r\n\r\n    var that = this;\r\n\r\n    var loader = this.loadingCtrl.create({\r\n      content: \"Please wait....\"\r\n    });\r\n    loader.present();\r\n\r\n\r\n    this.usersService.loginUserService(this.email, this.password).then(authData => {\r\n      //successful\r\n      loader.dismiss();\r\n      that.navCtrl.setRoot(HomePage);\r\n    }, error => {\r\n      loader.dismiss();\r\n        //Unable to log in\r\n        let toast = this.toastCtrl.create({\r\n          message: error,\r\n          duration: 9000,\r\n          position: 'top'\r\n        });\r\n        toast.present();\r\n\r\n    that.password = \"\" //empty password field\r\n    });\r\n\r\n  }\r\n\r\n  forgotPassword() {\r\n\r\n  }\r\n\r\n  redirectToSignup() {\r\n    this.navCtrl.push(SignupPage);\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { MyApp } from './app.component';\r\nimport { HomePage } from '../pages/home/home';\r\nimport { StudiesPage } from '../pages/studies/studies';\r\nimport { CreateStudyPage } from '../pages/create_study/create_study';\r\nimport { ModulesPage } from '../pages/modules/modules';\r\nimport { LoginPage } from '../pages/login/login';\r\nimport { SignupPage } from '../pages/signup/signup';\r\nimport { QuestionsPage } from '../pages/questions/questions';\r\nimport { SelectModulePage } from '../pages/select_module/select_module';\r\n\r\n\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport * as firebase from 'firebase';\r\nimport { UsersserviceProvider } from '../providers/usersservice/usersservice';\r\nimport { DatabaseProvider } from '../providers/database/database';\r\n\r\n\r\n// Initialize Firebase\r\nexport const config = {\r\n  apiKey: \"AIzaSyC_Y1zWA0W4LTAr0jE7tYX-bPfbK3B51QI\",\r\n  authDomain: \"capstone-sugar.firebaseapp.com\",\r\n  databaseURL: \"https://capstone-sugar.firebaseio.com\",\r\n  projectId: \"capstone-sugar\",\r\n  storageBucket: \"capstone-sugar.appspot.com\",\r\n  messagingSenderId: \"714682249068\"\r\n};\r\nfirebase.initializeApp(config);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyApp,\r\n    HomePage,\r\n    StudiesPage,\r\n    ModulesPage,\r\n    LoginPage,\r\n    SignupPage,\r\n    QuestionsPage,\r\n    SelectModulePage,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    IonicModule.forRoot(MyApp)\r\n  ],\r\n  bootstrap: [IonicApp],\r\n  entryComponents: [\r\n    MyApp,\r\n    HomePage,\r\n    StudiesPage,\r\n    ModulesPage,\r\n    LoginPage,\r\n    SignupPage,\r\n    QuestionsPage,\r\n    SelectModulePage,\r\n  ],\r\n  providers: [\r\n    StatusBar,\r\n    SplashScreen,\r\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\r\n    UsersserviceProvider,\r\n    DatabaseProvider\r\n  ]\r\n})\r\nexport class AppModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, ViewChild } from '@angular/core';\r\nimport { Nav, Platform } from 'ionic-angular';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\n\r\nimport { HomePage } from '../pages/home/home';\r\nimport { StudiesPage } from '../pages/studies/studies';\r\nimport { ModulesPage } from '../pages/modules/modules';\r\nimport { LoginPage } from '../pages/login/login';\r\nimport { QuestionsPage } from '../pages/questions/questions';\r\nimport { ENV } from '../config/env';\r\nimport * as firebase from 'firebase';\r\n\r\n@Component({\r\n  templateUrl: 'app.html'\r\n\r\n})\r\nexport class MyApp {\r\n  @ViewChild(Nav) nav: Nav;\r\n\r\n  rootPage:any = HomePage;\r\n\r\n  pages: Array<{title: string, component: any}>;\r\n\r\n  constructor(public platform: Platform, public statusBar: StatusBar, public splashScreen: SplashScreen) {\r\n\r\n\r\n\r\n    this.initializeApp();\r\n\r\n    // used for an example of ngFor and navigation\r\n    this.pages = [\r\n      { title: 'Home', component: HomePage },\r\n      { title: 'My Studies', component: StudiesPage },\r\n      { title: 'My Questions', component: QuestionsPage },\r\n      { title: 'Modules', component: ModulesPage },\r\n    ];\r\n\r\n  }\r\n\r\n  initializeApp() {\r\n    this.platform.ready().then(() => {\r\n      // Okay, so the platform is ready and our plugins are available.\r\n      // Here you can do any higher level native things you might need.\r\n      this.statusBar.styleDefault();\r\n      this.splashScreen.hide();\r\n    });\r\n  }\r\n\r\n  openPage(page) {\r\n    // Reset the content nav to have just this page\r\n    // we wouldn't want the back button to show in this scenario\r\n    this.nav.setRoot(page.component);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormsModule } from '@angular/forms';\r\nimport { AlertController, IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { DatabaseProvider } from '../../providers/database/database';\r\n\r\n/**\r\n * Generated class for the SelectStudyPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\n @IonicPage({\r\n \tname: \"select_study\"\r\n })\r\n@Component({\r\n  selector: 'page-select-study',\r\n  templateUrl: 'select_study.html',\r\n})\r\nexport class SelectStudyPage {\r\n\r\n  /**\r\n   * @name records\r\n   * @type {object}\r\n   * @public\r\n   * @description     Defines an object for returning documents from Cloud Firestore database\r\n   */\r\n  public records       : any;\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\r\n    let record = params.get(record);\r\n\r\n    this.full_name = record.location.full_name;\r\n    this.short_name = record.location.short_name;\r\n    this.abstract = record.location.abstract;\r\n    this.end_date = record.location.end_date;\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    console.log('ionViewDidLoad SelectStudyPage');\r\n  }\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/select_study/select_study.ts","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport 'rxjs/add/operator/map';\r\n\r\n// Import firebase and firestore\r\nimport * as firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\n/*\r\n  Generated class for the DatabaseProvider provider.\r\n\r\n  See https://angular.io/guide/dependency-injection for more info on providers\r\n  and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class DatabaseProvider {\r\n\r\n  private _DB: any;\r\n\r\n  constructor(public http: HttpClient) {\r\n    console.log('Hello DatabaseQuestionsProvider Provider');\r\n    this._DB = firebase.firestore();\r\n  }\r\n\r\n  /**\r\n  * Create the database collection and defines an initial document\r\n  * Note the use of merge : true flag within the returned promise  - this\r\n  * is needed to ensure that the collection is not repeatedly recreated should\r\n  * this method be called again (we DON'T want to overwrite our documents!)\r\n  */\r\n\r\n  createAndPopulateDocument(collectionObj: string,\r\n                            docID: string,\r\n                            dataObj: any) : Promise<any>{\r\n     return new Promise((resolve, reject) => {\r\n       this._DB\r\n       .collection(collectionObj)\r\n       .doc(docID)\r\n       .set(dataObj, {merge: true})\r\n       .then((data : any) => {\r\n         resolve(data);\r\n       })\r\n       .catch((error: any) => {\r\n         reject(error);\r\n       })\r\n     })\r\n  }\r\n\r\n  /*\r\n   * Return documents from specific database collection\r\n   */\r\n\r\n  getQuestions(collectionObj: string) : Promise<any>{\r\n    return new Promise((resolve, reject) => {\r\n      this._DB.collection(collectionObj)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        let obj : any = [];\r\n\r\n        querySnapshot\r\n        .forEach((doc: any) => {\r\n          obj.push({\r\n           id             : doc.id,\r\n           name           : doc.data().name,\r\n           type     : doc.data().type,\r\n           qtext    : doc.data().qtext\r\n          });\r\n        });\r\n\r\n        resolve(obj);\r\n      })\r\n      .catch((error : any) => {\r\n        reject(error);\r\n      });\r\n    });\r\n  }\r\n\r\n  /*\r\n   * Return documents from specific database collection\r\n   */\r\n\r\n  getModules(collectionObj: string) : Promise<any>{\r\n    return new Promise((resolve, reject) => {\r\n      this._DB.collection(collectionObj)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        let obj : any = [];\r\n\r\n        querySnapshot\r\n        .forEach((doc: any) => {\r\n          obj.push({\r\n           id             : doc.id,\r\n           name           : doc.data().name,\r\n           owner    : doc.data().owner,\r\n           type     : doc.data().type,\r\n          });\r\n        });\r\n\r\n        resolve(obj);\r\n      })\r\n      .catch((error : any) => {\r\n        reject(error);\r\n      });\r\n    });\r\n  }\r\n\r\n  /*\r\n   * Return documents from specific database collection\r\n   */\r\n\r\n  getStudies(collectionObj: string) : Promise<any>{\r\n    return new Promise((resolve, reject) => {\r\n      this._DB.collection(collectionObj)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        let obj : any = [];\r\n\r\n        querySnapshot\r\n        .forEach((doc: any) => {\r\n          obj.push({\r\n           id             : doc.id,\r\n           full_name           : doc.data().full_name,\r\n           abstract    : doc.data().abstract,\r\n           short_name     : doc.data().short_name,\r\n          });\r\n        });\r\n\r\n        resolve(obj);\r\n      })\r\n      .catch((error : any) => {\r\n        reject(error);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add a new document to a selected database collection\r\n   */\r\n\r\n  addDocument(collectionObj : string,\r\n              dataObj : any) : Promise<any>{\r\n    return new Promise((resolve, reject) => {\r\n      this._DB.collection(collectionObj).add(dataObj)\r\n      .then((obj : any) => {\r\n        resolve(obj);\r\n      })\r\n      .catch((error : any) => {\r\n        reject(error);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Delete an existing document from a selected database collection\r\n   */\r\n\r\n   deleteDocument(collectionObj : string,\r\n                  docID : string) : Promise<any>{\r\n      return new Promise((resolve, reject) => {\r\n        this._DB\r\n        .collection(collectionObj)\r\n        .doc(docID)\r\n        .delete()\r\n        .then((obj : any) => {\r\n          resolve(obj);\r\n        })\r\n        .catch((error : any) => {\r\n          reject(error);\r\n        });\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Update an existing document within a selected database collection\r\n     */\r\n\r\n    updateDocument(collectionObj : string,\r\n                    docID : string,\r\n                    dataObj : any) : Promise<any>{\r\n      return new Promise((resolve, reject) => {\r\n        this._DB\r\n        .collection(collectionObj)\r\n        .doc(docID)\r\n        .update(dataObj)\r\n        .then((obj : any) => {\r\n          resolve(obj);\r\n        })\r\n        .catch((error : any) => {\r\n          reject(error);\r\n        });\r\n      });\r\n    }\r\n\r\n    viewDocument(collectionObj : string,\r\n                    docID : string,\r\n                    dataObj : any) : Promise<any>{\r\n      return new Promise((resolve, reject) => {\r\n        this._DB\r\n        .collection(collectionObj)\r\n        .doc(docID)\r\n        .then((obj : any) => {\r\n          resolve(obj);\r\n        })\r\n        .catch((error : any) => {\r\n          reject(error);\r\n        });\r\n      });\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/database/database.ts"],"sourceRoot":""}
=======
{"version":3,"sources":["../../src/pages/home/home.ts","../../src/providers/usersservice/usersservice.ts","../../src/providers/database/database.ts","../../src/pages/signup/signup.ts","../../src/pages/modules/modules.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/list/list.ts","../../src/pages/create_study/create_study.ts","../../src/pages/questions/questions.ts","../../src/pages/login/login.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Injectable } from '@angular/core';\nimport * as firebase from 'firebase';\n\n/*\n  Generated class for the UsersserviceProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class UsersserviceProvider {\n\n  public data: any;\n  public fireAuth: any;\n  public userProfile: any;\n\n  constructor() {\n    console.log('Hello UsersserviceProvider Provider');\n\n    this.fireAuth = firebase.auth();\n    this.userProfile = firebase.database().ref('Users');\n  }\n\n  loginUserService(email: string, password: string): any {\n    return this.fireAuth.signInWithEmailAndPassword(email, password);\n  }\n\n  signupUserService(email:string, password: string): any {\n\n    return this.fireAuth.createUserWithEmailAndPassword(email, password).then((newUser) => {\n      //sign in the user\n      this.fireAuth.signInWithEmailAndPassword(email, password).then((authenticatedUser) => {\n      //successful login, create user profile\n      });\n    });\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/usersservice/usersservice.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport 'rxjs/add/operator/map';\n\n// Import firebase and firestore\nimport * as firebase from 'firebase';\nimport 'firebase/firestore';\n\n/*\n  Generated class for the DatabaseProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class DatabaseProvider {\n\n  private _DB: any;\n\n  constructor(public http: HttpClient) {\n    console.log('Hello DatabaseProvider Provider');\n    this._DB = firebase.firestore();\n  }\n\n  /**\n  * Create the database collection and defines an initial document\n  * Note the use of merge : true flag within the returned promise  - this\n  * is needed to ensure that the collection is not repeatedly recreated should\n  * this method be called again (we DON'T want to overwrite our documents!)\n  */\n\n  createAndPopulateDocument(collectionObj: string,\n                            docID: string,\n                            dataObj: any) : Promise<any>{\n     return new Promise((resolve, reject) => {\n       this._DB\n       .collection(collectionObj)\n       .doc(docID)\n       .set(dataObj, {merge: true})\n       .then((data : any) => {\n         resolve(data);\n       })\n       .catch((error: any) => {\n         reject(error);\n       })\n     })\n  }\n\n  /*\n   * Return documents from specific database collection\n   */\n\n  getDocuments(collectionObj: string) : Promise<any>{\n    return new Promise((resolve, reject) => {\n      this._DB.collection(collectionObj)\n      .get()\n      .then((querySnapshot) => {\n        let obj : any = [];\n\n        querySnapshot\n        .forEach((doc: any) => {\n          obj.push({\n           id             : doc.id,\n           name           : doc.data().name,\n           type     : doc.data().type,\n           qtext    : doc.data().qtext\n          });\n        });\n\n        resolve(obj);\n      })\n      .catch((error : any) => {\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Add a new document to a selected database collection\n   */\n\n  addDocument(collectionObj : string,\n              dataObj : any) : Promise<any>{\n    return new Promise((resolve, reject) => {\n      this._DB.collection(collectionObj).add(dataObj)\n      .then((obj : any) => {\n        resolve(obj);\n      })\n      .catch((error : any) => {\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Delete an existing document from a selected database collection\n   */\n\n   deleteDocument(collectionObj : string,\n                  docID : string) : Promise<any>{\n      return new Promise((resolve, reject) => {\n        this._DB\n        .collection(collectionObj)\n        .doc(docID)\n        .delete()\n        .then((obj : any) => {\n          resolve(obj);\n        })\n        .catch((error : any) => {\n          reject(error);\n        });\n      });\n    }\n\n    /**\n     * Update an existing document within a selected database collection\n     */\n\n    updateDocument(collectionObj : string,\n                    docID : string,\n                    dataObj : any) : Promise<any>{\n      return new Promise((resolve, reject) => {\n        this._DB\n        .collection(collectionObj)\n        .doc(docID)\n        .update(dataObj)\n        .then((obj : any) => {\n          resolve(obj);\n        })\n        .catch((error : any) => {\n          reject(error);\n        });\n      });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/database/database.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, LoadingController, ToastController } from 'ionic-angular';\nimport { UsersserviceProvider } from '../../providers/usersservice/usersservice';\nimport { HomePage } from '../home/home';\n\nimport * as firebase from 'firebase';\n\n/**\n * Generated class for the SignupPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-signup',\n  templateUrl: 'signup.html',\n  providers: [UsersserviceProvider]\n})\nexport class SignupPage {\n\n  public email: string;\n  public password: any;\n  public phone: any;\n  public first_name: any;\n  public last_name: any;\n\n  constructor(\n    public usersserviceProvider: UsersserviceProvider,\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public toastCtrl: ToastController,\n    public loadingCtrl: LoadingController) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad SignupPage');\n  }\n\n  doSignup() {\n\n    var that = this;\n\n    var loader = this.loadingCtrl.create({\n      content: \"Please wait...\",\n    });\n    loader.present();\n\n    this.usersserviceProvider.signupUserService(this.email, this.password).then(authData => {\n      loader.dismiss();\n      that.navCtrl.setRoot(HomePage);\n\n    }, error => {\n      loader.dismiss();\n\n      this.toastCtrl.create({\n        message: error,\n        duration: 9000,\n        position: 'top'\n      }).present();\n\n      that.password = \"\"\n    });\n\n\n\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signup/signup.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\n\n/**\n * Generated class for the ModulesPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-modules',\n  templateUrl: 'modules.html',\n})\nexport class ModulesPage {\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad ModulesPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/modules/modules.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 194;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 194\n// module chunks = 4","var map = {\n\t\"../pages/create_question/create_question.module\": [\n\t\t529,\n\t\t0\n\t],\n\t\"../pages/login/login.module\": [\n\t\t530,\n\t\t3\n\t],\n\t\"../pages/modules/modules.module\": [\n\t\t531,\n\t\t2\n\t],\n\t\"../pages/signup/signup.module\": [\n\t\t532,\n\t\t1\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 235;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 235\n// module chunks = 4","import { Component } from '@angular/core';\nimport { NavController, NavParams } from 'ionic-angular';\n\n@Component({\n  selector: 'page-list',\n  templateUrl: 'list.html'\n})\nexport class ListPage {\n  selectedItem: any;\n  icons: string[];\n  items: Array<{title: string, note: string, icon: string}>;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n    // If we navigated to this page, we will have an item available as a nav param\n    this.selectedItem = navParams.get('item');\n\n    // Let's populate this page with some filler content for funzies\n    this.icons = ['albums'];\n\n    this.items = [];\n    for (let i = 1; i < 4; i++) {\n      this.items.push({\n        title: 'Study ' + i,\n        note: 'This is Study #' + i,\n        icon: this.icons[Math.floor(Math.random() * this.icons.length)]\n      });\n    }\n  }\n\n  itemTapped(event, item) {\n    // That's right, we're pushing to ourselves!\n    /*this.navCtrl.push(ListPage, {\n      item: item\n    });*/\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/list/list.ts","import { Component } from '@angular/core';\nimport { NavController,ToastController } from 'ionic-angular';\nimport * as firebase from 'firebase';\n\n@Component({\n  selector: 'page-create-study',\n  templateUrl: 'create_study.html'\n})\n\nexport class CreateStudyPage {\n\n  public study_fname: string;\n  public study_sname: string;\n  public study_sdate: string;\n  public study_edate: string;\n  public study_description: string;\n\n  constructor(public navCtrl: NavController, public toastCtrl: ToastController) {\n\n  }\n\n\n  submitStudy() {\n\n      var study_database = firebase.database().ref(\"Studies/\" + this.study_sname).set({\n      Abstract: this.study_description,\n      EndDate: this.study_edate,\n      FullName: this.study_fname,\n      StartDate: this.study_sdate\n    });\n\n    this.toastCtrl.create({\n      message: \"Study Created\",\n      duration: 9000,\n      position: 'top'\n    }).present();\n\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/create_study/create_study.ts","import { Component } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { DatabaseProvider } from '../../providers/database/database';\n\n@Component({\n  selector: 'page-questions',\n  templateUrl: 'questions.html'\n})\nexport class QuestionsPage {\n\n\n\n   /**\n    * @name _COLL\n    * @type {string}\n    * @private\n    * @description      Defines the name of the database collection\n    */\n   private _COLL \t\t: string \t\t\t= \"Questions\";\n\n\n\n\n   /**\n    * @name _DOC\n    * @type {string}\n    * @private\n    * @description      Defines the initial document ID for the database collection\n    */\n   private _DOC \t\t: string \t\t\t= \"Xy76Re34SdFR1\";\n\n\n\n\n   /**\n    * @name _CONTENT\n    * @type {any}\n    * @private\n    * @description      Used to store/provide the initial document data for the database collection\n    */\n   private _CONTENT  \t: any;\n\n\n\n   /**\n    * @name locations\n    * @type {any}\n    * @public\n    * @description      Property to store the returned documents from the database collection\n    */\n   public locations     : any;\n\n\n\n   constructor(public navCtrl  : NavController,\n               private _DB     : DatabaseProvider,\n               private _ALERT  : AlertController)\n   {\n      this._CONTENT = {\n         name : \"DietQ1\",\n         type : \"textbox\",\n         qtext : \"Did you over eat during your last meal?\"\n      };\n   }\n\n\n\n\n   /**\n    * Retrieve all documents from the specified collection using the\n    * retrieveCollection method when the view is entered\n    *\n    * @public\n    * @method ionViewDidEnter\n    * @return {none}\n    */\n   ionViewDidEnter()\n   {\n      this.retrieveCollection();\n   }\n\n\n\n\n   /**\n    * Creates the collection and populates that with an initial document\n    * using the createAndPopulateDocument method of the DatabaseProvider\n    * service\n    *\n    * @public\n    * @method generateCollectionAndDocument\n    * @return {none}\n    */\n   generateCollectionAndDocument() : void\n   {\n      this._DB.createAndPopulateDocument(this._COLL,\n                                         this._DOC,\n                                         this._CONTENT)\n      .then((data : any) =>\n      {\n         console.dir(data);\n      })\n      .catch((error : any) =>\n      {\n         console.dir(error);\n      });\n   }\n\n\n\n\n   /**\n    * Retrieve all documents from the specified collection using the\n    * getDocuments method of the DatabaseProvider service\n    *\n    * @public\n    * @method retrieveCollection\n    * @return {none}\n    */\n   retrieveCollection() : void\n   {\n      this._DB.getDocuments(this._COLL)\n      .then((data) =>\n      {\n\n         // IF we don't have any documents then the collection doesn't exist\n         // so we create it!\n         if(data.length === 0)\n         {\n            this.generateCollectionAndDocument();\n         }\n\n         // Otherwise the collection does exist and we assign the returned\n         // documents to the public property of locations so this can be\n         // iterated through in the component template\n         else\n         {\n            this.locations = data;\n         }\n      })\n      .catch();\n   }\n\n\n\n\n   /**\n    * Navigate to the manage-document component to begin adding a new document\n    *\n    * @public\n    * @method addDocument\n    * @return {none}\n    */\n   addDocument() : void\n   {\n      this.navCtrl.push('create_question');\n   }\n\n\n\n\n   /**\n    * Update a document by passing the data to the manage-document component\n    *\n    * @public\n    * @method updateDocument\n    * @param  obj          {Object}           The document data we wish to update\n    * @return {none}\n    */\n   updateDocument(obj) : void\n   {\n      let params : any = {\n         collection   : this._COLL,\n         location     : obj\n      };\n      this.navCtrl.push('create_question', { record : params, isEdited : true });\n   }\n\n\n\n\n   /**\n    * Delete a document from the Cloud Firestore collection using the\n    * deleteDocument method of the DatabaseProvider service\n    *\n    * @public\n    * @method deleteDocument\n    * @param  obj          {Object}           The document ID for the document we wish to delete\n    * @return {none}\n    */\n   deleteDocument(obj) : void\n   {\n      this._DB.deleteDocument(this._COLL,\n      \t\t\t\t\t\tobj.id)\n      .then((data : any) =>\n      {\n         this.displayAlert('Success', 'The record ' + obj.name + ' was successfully removed');\n      })\n      .catch((error : any) =>\n      {\n         this.displayAlert('Error', error.message);\n      });\n   }\n\n\n\n\n   /**\n    * Provide feedback to user after an operation has succeeded/failed\n    *\n    * @public\n    * @method displayAlert\n    * @param  title          {String}           Heading for alert message\n    * @param  message        {String}           Content for alert message\n    * @return {none}\n    */\n   displayAlert(title      : string,\n                message    : string) : void\n   {\n      let alert : any     = this._ALERT.create({\n         title      : title,\n         subTitle   : message,\n         buttons    : [{\n          text      : 'Got It!',\n          handler   : () =>\n          {\n            this.retrieveCollection();\n          }\n        }]\n      });\n      alert.present();\n   }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/questions/questions.ts","import { Component } from '@angular/core';\nimport { HomePage } from '../home/home';\nimport { SignupPage } from '../signup/signup';\nimport { IonicPage, NavController, NavParams, LoadingController, ToastController } from 'ionic-angular';\nimport * as firebase from 'firebase';\nimport { UsersserviceProvider } from '../../providers/usersservice/usersservice';\n\n/**\n * Generated class for the LoginPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n  providers: [UsersserviceProvider]\n})\nexport class LoginPage {\n\n  public email: string;\n  public password: string;\n\n  constructor(\n    public usersService: UsersserviceProvider,\n    public loadingCtrl: LoadingController,\n    public toastCtrl: ToastController,\n    public navCtrl: NavController,\n    public navParams: NavParams) {\n\n      firebase.auth().onAuthStateChanged(function(user) {\n        if (user) {\n          // User is signed in.\n          this.navCtrl.push(HomePage);\n          // ...\n        }\n      });\n\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad LoginPage');\n  }\n\n  submitLogin() {\n\n    var that = this;\n\n    var loader = this.loadingCtrl.create({\n      content: \"Please wait....\"\n    });\n    loader.present();\n\n\n    this.usersService.loginUserService(this.email, this.password).then(authData => {\n      //successful\n      loader.dismiss();\n      that.navCtrl.setRoot(HomePage);\n    }, error => {\n      loader.dismiss();\n        //Unable to log in\n        let toast = this.toastCtrl.create({\n          message: error,\n          duration: 9000,\n          position: 'top'\n        });\n        toast.present();\n\n    that.password = \"\" //empty password field\n    });\n\n  }\n\n  forgotPassword() {\n\n  }\n\n  redirectToSignup() {\n    this.navCtrl.push(SignupPage);\n  }\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { ListPage } from '../pages/list/list';\nimport { CreateStudyPage } from '../pages/create_study/create_study';\nimport { ModulesPage } from '../pages/modules/modules';\nimport { LoginPage } from '../pages/login/login';\nimport { SignupPage } from '../pages/signup/signup';\nimport { QuestionsPage } from '../pages/questions/questions';\nimport { CreateQuestionPage } from '../pages/create_question/create_question';\n\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport * as firebase from 'firebase';\nimport { UsersserviceProvider } from '../providers/usersservice/usersservice';\nimport { DatabaseProvider } from '../providers/database/database';\n\n\n\n// Initialize Firebase\nexport const config = {\n  apiKey: \"AIzaSyC_Y1zWA0W4LTAr0jE7tYX-bPfbK3B51QI\",\n  authDomain: \"capstone-sugar.firebaseapp.com\",\n  databaseURL: \"https://capstone-sugar.firebaseio.com\",\n  projectId: \"capstone-sugar\",\n  storageBucket: \"capstone-sugar.appspot.com\",\n  messagingSenderId: \"714682249068\"\n};\nfirebase.initializeApp(config);\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    ListPage,\n    CreateStudyPage,\n    ModulesPage,\n    LoginPage,\n    SignupPage,\n    QuestionsPage,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    ListPage,\n    CreateStudyPage,\n    ModulesPage,\n    LoginPage,\n    SignupPage,\n    QuestionsPage,\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    UsersserviceProvider,\n    DatabaseProvider\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, ViewChild } from '@angular/core';\nimport { Nav, Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\nimport { ListPage } from '../pages/list/list';\nimport { CreateStudyPage } from '../pages/create_study/create_study';\nimport { ModulesPage } from '../pages/modules/modules';\nimport { LoginPage } from '../pages/login/login';\nimport { QuestionsPage } from '../pages/questions/questions';\nimport { ENV } from '../config/env';\nimport * as firebase from 'firebase';\n\n@Component({\n  templateUrl: 'app.html'\n\n})\nexport class MyApp {\n  @ViewChild(Nav) nav: Nav;\n\n  rootPage:any = HomePage;\n\n  pages: Array<{title: string, component: any}>;\n\n  constructor(public platform: Platform, public statusBar: StatusBar, public splashScreen: SplashScreen) {\n\n\n\n    this.initializeApp();\n\n    // used for an example of ngFor and navigation\n    this.pages = [\n      { title: 'Home', component: HomePage },\n      { title: 'My Studies', component: ListPage },\n      { title: 'My Questions', component: QuestionsPage },\n      { title: 'Modules', component: ModulesPage },\n      { title: 'Create Study', component: CreateStudyPage },\n    ];\n\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n\n  openPage(page) {\n    // Reset the content nav to have just this page\n    // we wouldn't want the back button to show in this scenario\n    this.nav.setRoot(page.component);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}
>>>>>>> 61bb19e8debc89449860cb782ca539c76bbd1909
