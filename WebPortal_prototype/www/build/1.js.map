{"version":3,"sources":["../../src/pages/select_module/select_module.module.ts","../../src/pages/select_module/select_module.ts"],"names":[],"mappings":"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","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { SelectModulePage } from './select_module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SelectModulePage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(SelectModulePage),\r\n  ],\r\n})\r\nexport class SelectModulePageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/select_module/select_module.module.ts","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators,FormsModule } from '@angular/forms';\r\nimport { AlertController, IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { ModulesPage } from '../modules/modules';\r\nimport { DatabaseProvider } from '../../providers/database/database';\r\nimport { UsersserviceProvider } from '../../providers/usersservice/usersservice';\r\n\r\n/**\r\n * Generated class for the SelectModulePage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage({\r\n name: \"select_module\"\r\n})\r\n@Component({\r\n  selector: 'page-select-module',\r\n  templateUrl: 'select_module.html',\r\n})\r\nexport class SelectModulePage {\r\n\r\n  /**\r\n   * @name form\r\n   * @type {object}\r\n   * @public\r\n   * @description     Defines an object for handling form validation\r\n   */\r\n  public form          : any;\r\n\r\n\r\n\r\n  /**\r\n   * @name records\r\n   * @type {object}\r\n   * @public\r\n   * @description     Defines an object for returning documents from Cloud Firestore database\r\n   */\r\n  public records       : any;\r\n\r\n\r\n\r\n  /**\r\n   * @name name\r\n   * @type {string}\r\n   * @public\r\n   * @description     Model for city form field\r\n   */\r\n  public name          : string          = '';\r\n\r\n\r\n\r\n  /**\r\n   * @name owner\r\n   * @type {string}\r\n   * @public\r\n   * @description     Model for population form field\r\n   */\r\n  public owner    : string          = '';\r\n\r\n\r\n\r\n  /**\r\n   * @name tyoe\r\n   * @type {string}\r\n   * @public\r\n   * @description     Model for established form field\r\n   */\r\n  public type \t: string          = '';\r\n\r\n  /**\r\n   * @name recurrence\r\n   * @type {string}\r\n   * @public\r\n   * @description     Model for established form field\r\n   */\r\n  public recurrence \t: string          = '';\r\n\r\n  /**\r\n   * @name start_time\r\n   * @type {time}\r\n   * @public\r\n   * @description     Model for established form field\r\n   */\r\n  public start_time \t: any;\r\n\r\n  /**\r\n   * @name start_date\r\n   * @type {date}\r\n   * @public\r\n   * @description     Model for established form field\r\n   */\r\n  public start_date \t: string             = '';\r\n\r\n  /**\r\n   * @name end_date\r\n   * @type {date}\r\n   * @public\r\n   * @description     Model for established form field\r\n   */\r\n  public end_date \t: string             = '';\r\n\r\n\r\n\r\n  /**\r\n   * @name docID\r\n   * @type {string}\r\n   * @public\r\n   * @description     property that stores an edited document's ID\r\n   */\r\n  public docID         : string          = '';\r\n\r\n\r\n\r\n  /**\r\n   * @name isEditable\r\n   * @type {boolean}\r\n   * @public\r\n   * @description     property that stores value to signify whether\r\n                      we are editing an existing document or not\r\n   */\r\n  public isEditable    : boolean         = false;\r\n\r\n\r\n\r\n  /**\r\n   * @name title\r\n   * @type {string}\r\n   * @public\r\n   * @description     property that defines the template title value\r\n   */\r\n  public title \t\t: string\t\t   = 'Add a new question';\r\n\r\n\r\n\r\n  /**\r\n   * @name _COLL\r\n   * @type {string}\r\n   * @private\r\n   * @description     property that stores the value for the database collection\r\n   */\r\n  private _COLL \t\t: string \t\t\t= \"Modules\";\r\n  private module  : any;\r\n  private record : any;\r\n\r\n  /**\r\n   * @name quests\r\n   * @type {object}\r\n   * @private\r\n   * @description     property that stores the value for the database collection\r\n   */\r\n  private quests \t\t: any;\r\n\r\n  /**\r\n   * @name questions\r\n   * @type {object}\r\n   * @private\r\n   * @description     property that stores the value for the database collection\r\n   */\r\n  private questions \t\t: any;\r\n  private option1       : string;\r\n  private option2       : string;\r\n  private option3       : string;\r\n  private option4       : string;\r\n  private option5       : string;\r\n  private option6       : string;\r\n  private opts          : any;\r\n\r\n\r\n  public email          : string;\r\n\r\n  public every          : string;\r\n\r\n  public flag          : boolean = false;\r\n  public firstFlag     : boolean = false;\r\n  public secondFlag    : boolean = false;\r\n  public link          : string;\r\n\r\n  constructor(public navCtrl        : NavController,\r\n              public params         : NavParams,\r\n              private _FB \t         : FormBuilder,\r\n              private _DB           : DatabaseProvider,\r\n              private _US           : UsersserviceProvider,\r\n              private _ALERT        : AlertController)\r\n  {\r\n\r\n     // Use Formbuilder API to create a FormGroup object\r\n     // that will be used to programmatically control the\r\n     // form / form fields in the component template\r\n     this.form \t\t= _FB.group({\r\n        'name' \t\t        : ['', Validators.required],\r\n        'type'\t        : ['', Validators.required],\r\n        'recurrence'\t\t\t: [''],\r\n        'start_time'\t\t\t:\t[''],\r\n        'start_date'\t\t\t: [''],\r\n        'end_date'\t\t\t\t: [''],\r\n        'every'           : [''],\r\n\r\n     });\r\n\r\n\r\n     // If we have navigation parameters then we need to\r\n     // parse these as we know these will be used for\r\n     // editing an existing record\r\n     if(params.get('isEdited'))\r\n     {\r\n         let record \t\t        = params.get('record');\r\n\r\n         this.name\t            = record.location.name;\r\n         this.type   \t  = record.location.type;\r\n         this.recurrence = record.location.recurrence;\r\n         this.start_time = record.location.start_time;\r\n         this.start_date = record.location.start_date;\r\n         this.end_date = record.location.end_date;\r\n         this.every    = record.location.every;\r\n         this.owner      = record.location.owner;\r\n         this.docID            = record.location.id;\r\n         this.isEditable       = true;\r\n         this.title            = 'Update this document';\r\n\r\n         this.module = record.location;\r\n     }\r\n  }\r\n\r\n  ionViewDidEnter()\r\n  {\r\n    this.retrieveCollection();\r\n    if(this.docID != ''){\r\n      this.retrieveSubCollection();\r\n    }\r\n\r\n    this.email = this._US.returnUser();\r\n  }\r\n\r\n  retrieveCollection() : void\r\n  {\r\n     this._DB.getQuestions_Modules(\"Questions\")\r\n     .then((data) =>\r\n     {\r\n       this.quests = data;\r\n       console.log(this.quests);\r\n     })\r\n     .catch();\r\n\r\n  }\r\n\r\n  retrieveSubCollection() : void\r\n  {\r\n     this._DB.getModules_Questions(this._COLL, this.docID, \"Questions\")\r\n     .then((data) =>\r\n     {\r\n       this.questions = data;\r\n     })\r\n     .catch();\r\n  }\r\n\r\n\r\n  updateModule(val : any) : void\r\n  {\r\n     let name\t      : string\t\t= this.form.controls[\"name\"].value,\r\n         type       : string \t\t= this.form.controls[\"type\"].value,\r\n         recurrence\t: string\t\t= this.form.controls['recurrence'].value,\r\n         start_time\t: string\t\t= this.form.controls['start_time'].value,\r\n         start_date\t: string\t\t= this.form.controls['start_date'].value,\r\n         end_date\t\t: string\t\t= this.form.controls['end_date'].value,\r\n         every      : string    = this.form.controls['every'].value;\r\n\r\n\r\n     // If we are editing an existing record then handle this scenario\r\n     if(this.isEditable)\r\n     {\r\n\r\n        // Call the DatabaseProvider service and pass/format the data for use\r\n        // with the updateDocument method\r\n        this._DB.updateDocument(this._COLL,\r\n                              this.docID,\r\n                              {\r\n                                name    : name,\r\n                                type    : type,\r\n                                recurrence : recurrence,\r\n                                start_time\t: start_time,\r\n                                start_date\t: start_date,\r\n                                end_date\t\t: end_date,\r\n                                every       : every\r\n                            })\r\n        .then((data) =>\r\n        {\r\n           this.displayAlert('Success', 'The module ' +  name + ' was successfully updated');\r\n        })\r\n        .catch((error) =>\r\n        {\r\n           this.displayAlert('Updating module failed', error.message);\r\n        });\r\n     }\r\n\r\n     // Otherwise we are adding a new record\r\n     else\r\n     {\r\n\r\n        // Call the DatabaseProvider service and pass/format the data for use\r\n        // with the addDocument method\r\n        this._DB.addDocument(this._COLL,\r\n                           {\r\n                            name    : name,\r\n                            type    : type,\r\n                            recurrence : recurrence,\r\n                            start_time\t: start_time,\r\n                            start_date : start_date,\r\n                            end_date\t\t: end_date,\r\n                            every       : every\r\n                         })\r\n        .then((data) =>\r\n        {\r\n           this.displayAlert('Record added', 'The module ' +  name + ' was successfully added');\r\n        })\r\n        .catch((error) =>\r\n        {\r\n           this.displayAlert('Adding module failed', error.message);\r\n        });\r\n     }\r\n  }\r\n\r\n  deleteDocument() : void\r\n  {\r\n     this._DB.deleteDocument(this._COLL,\r\n                this.docID)\r\n     .then((data : any) =>\r\n     {\r\n        this.displayAlert('Success', 'The module ' + this.name + ' was successfully removed');\r\n        this.navCtrl.pop();\r\n     })\r\n     .catch((error : any) =>\r\n     {\r\n        this.displayAlert('Error', error.message);\r\n     });\r\n  }\r\n\r\n\r\n  saveQuestions(val : any, moduleID : any)\r\n  {\r\n    if(val.type == \"text\"){\r\n\r\n      if(this.questions.length === 0)\r\n      {\r\n        this._DB.addModules_First_Question(\"Modules\", this.docID, \"Questions\", {\r\n                                                              name    : val.name,\r\n                                                              id      : val.id,\r\n                                                              type    : val.type,\r\n                                                              qtext   : val.qtext,\r\n                                                              owner\t : val.owner,\r\n                                                              moduleID : moduleID\r\n                                                            })\r\n        .then((data : any) =>\r\n        {\r\n          this.displayAlert('Success', 'The question ' + val.name + ' was successfully added');\r\n        })\r\n        .catch((error : any) =>\r\n        {\r\n          this.displayAlert('Error', error.message);\r\n        });\r\n      }\r\n\r\n      else {\r\n        this._DB.addModules_Questions(\"Modules\", this.docID, \"Questions\", {\r\n                                                              name    : val.name,\r\n                                                              id      : val.id,\r\n                                                              type    : val.type,\r\n                                                              qtext   : val.qtext,\r\n                                                              owner\t : val.owner,\r\n                                                              moduleID : moduleID\r\n                                                            })\r\n        .then((data : any) =>\r\n        {\r\n          this.displayAlert('Success', 'The question ' + val.name + ' was successfully added');\r\n        })\r\n        .catch((error : any) =>\r\n        {\r\n          this.displayAlert('Error', error.message);\r\n        });\r\n      }\r\n    }\r\n\r\n    else if(val.type == \"multi\"){\r\n\r\n      if(this.questions.length === 0)\r\n      {\r\n        this.saveQuestionsHelper(val)\r\n        .then((opts : any) =>\r\n        {\r\n        console.log(this.opts);\r\n        this._DB.addModules_First_Question(\"Modules\", this.docID, \"Questions\", {\r\n                                                              name    : val.name,\r\n                                                              id      : val.id,\r\n                                                              type    : val.type,\r\n                                                              qtext   : val.qtext,\r\n                                                              owner\t  : val.owner,\r\n                                                              option1 : opts[0],\r\n                             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  option2 : opts[1],\r\n                             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  option3 : opts[2],\r\n                             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  option4 : opts[3],\r\n                             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  option5 : opts[4],\r\n                             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  option6 : opts[5],\r\n                                                              moduleID : moduleID\r\n                                                            })\r\n          .then((data : any) =>\r\n          {\r\n            this.displayAlert('Success', 'The question ' + val.name + ' was successfully added');\r\n          })\r\n          .catch((error : any) =>\r\n          {\r\n            this.displayAlert('Error', error.message);\r\n          });\r\n        })\r\n      }\r\n\r\n      else {\r\n        this.saveQuestionsHelper(val)\r\n        .then((opts : any) =>\r\n        {\r\n        console.log(this.opts);\r\n        this._DB.addModules_Questions(\"Modules\", this.docID, \"Questions\", {\r\n                                                              name    : val.name,\r\n                                                              id      : val.id,\r\n                                                              type    : val.type,\r\n                                                              qtext   : val.qtext,\r\n                                                              owner\t  : val.owner,\r\n                                                              option1 : opts[0],\r\n                             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  option2 : opts[1],\r\n                             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  option3 : opts[2],\r\n                             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  option4 : opts[3],\r\n                             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  option5 : opts[4],\r\n                             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  option6 : opts[5],\r\n                                                              moduleID : moduleID\r\n                                                            })\r\n            .then((data : any) =>\r\n            {\r\n              this.displayAlert('Success', 'The question ' + val.name + ' was successfully added');\r\n            })\r\n            .catch((error : any) =>\r\n            {\r\n              this.displayAlert('Error', error.message);\r\n            });\r\n          })\r\n        }\r\n\r\n      }\r\n\r\n\r\n\r\n    else if(val.type == \"radio\"){\r\n      if(this.questions.length === 0)\r\n      {\r\n        this.saveQuestionsHelper(val)\r\n        .then((opts : any) =>\r\n        {\r\n        console.log(this.opts);\r\n        this._DB.addModules_First_Question(\"Modules\", this.docID, \"Questions\", {\r\n                                                              name    : val.name,\r\n                                                              id      : val.id,\r\n                                                              type    : val.type,\r\n                                                              qtext   : val.qtext,\r\n                                                              owner\t  : val.owner,\r\n                                                              option1 : opts[0],\r\n                             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  option2 : opts[1],\r\n                             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  option3 : opts[2],\r\n                             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  option4 : opts[3],\r\n                             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  option5 : opts[4],\r\n                             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  option6 : opts[5],\r\n                                                              moduleID : moduleID\r\n                                                            })\r\n          .then((data : any) =>\r\n          {\r\n            this.displayAlert('Success', 'The question ' + val.name + ' was successfully added');\r\n          })\r\n          .catch((error : any) =>\r\n          {\r\n            this.displayAlert('Error', error.message);\r\n          });\r\n        })\r\n      }\r\n\r\n      else {\r\n        this.saveQuestionsHelper(val)\r\n        .then((opts : any) =>\r\n        {\r\n        console.log(this.opts);\r\n        this._DB.addModules_Questions(\"Modules\", this.docID, \"Questions\", {\r\n                                                              name    : val.name,\r\n                                                              id      : val.id,\r\n                                                              type    : val.type,\r\n                                                              qtext   : val.qtext,\r\n                                                              owner\t  : val.owner,\r\n                                                              option1 : opts[0],\r\n                             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  option2 : opts[1],\r\n                             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  option3 : opts[2],\r\n                             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  option4 : opts[3],\r\n                             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  option5 : opts[4],\r\n                             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  option6 : opts[5],\r\n                                                              moduleID : moduleID\r\n                                                            })\r\n            .then((data : any) =>\r\n            {\r\n              this.displayAlert('Success', 'The question ' + val.name + ' was successfully added');\r\n            })\r\n            .catch((error : any) =>\r\n            {\r\n              this.displayAlert('Error', error.message);\r\n            });\r\n          })\r\n        }\r\n      }\r\n\r\n    else{\r\n      this._DB.addModules_Questions(\"Modules\", this.docID, \"Questions\", {\r\n                                                            name    : val.name,\r\n                                                            id      : val.id,\r\n                                                            type    : val.type,\r\n                                                            qtext   : val.qtext,\r\n                                                            owner\t  : val.owner,\r\n                                                            moduleID : moduleID\r\n                                                          })\r\n      .then((data : any) =>\r\n      {\r\n        this.displayAlert('Success', 'The question ' + val.name + ' was successfully added');\r\n      })\r\n      .catch((error : any) =>\r\n      {\r\n        this.displayAlert('Error', error.message);\r\n      });\r\n    }\r\n  }\r\n\r\n  saveQuestionsHelper(val : any) : any\r\n  {\r\n    let opts = [];\r\n    let i = 0;\r\n    for(i = 0; i < this.quests.length; i++){\r\n      if (this.quests[i] == val.name){\r\n        opts[0] = this.quests[i].option1;\r\n        opts[1] = this.quests[i].option2;\r\n        opts[2] = this.quests[i].option3;\r\n        opts[3] = this.quests[i].option4;\r\n        opts[4] = this.quests[i].option5;\r\n        opts[5] = this.quests[i].option6;\r\n      }\r\n    }\r\n    return opts;\r\n  }\r\n\r\n  updateDocument(object) : void\r\n  {\r\n     let params : any = {\r\n        collection   : this._COLL,\r\n        location     : object\r\n     };\r\n     this.navCtrl.push('branching', { record : params});\r\n  }\r\n\r\n\r\n  exportAnswers_Modules(){\r\n    this._DB.exportAnswers_Modules(this.docID, this.name);\r\n    this.flag = true;\r\n  }\r\n\r\n  setLink() : void\r\n  {\r\n    this._DB.downloadAnswers_Modules(this.name);\r\n    this.firstFlag = true;\r\n  }\r\n\r\n  createLink() : void\r\n  {\r\n    this.link = this._DB.returnURL();\r\n    console.log(this.link);\r\n    this.secondFlag = true;\r\n  }\r\n\r\n  downloadFile() : void\r\n  {\r\n    window.location.href = this.link[\"i\"];\r\n  }\r\n\r\n  searchQuestions(input : any){\r\n\r\n    let val = input.target.value;\r\n    if(val && val.trim() != '') {\r\n      this.questions = this.questions.filter((question) => {\r\n        return(question.name.toLowerCase().indexOf(val.toLowerCase()) > -1);\r\n      })\r\n    }\r\n\r\n    else{\r\n      this.retrieveSubCollection();\r\n    }\r\n  }\r\n\r\n  searchOtherQuestions(input : any){\r\n\r\n    let val = input.target.value;\r\n    if(val && val.trim() != '') {\r\n      this.quests = this.quests.filter((quest) => {\r\n        return(quest.name.toLowerCase().indexOf(val.toLowerCase()) > -1);\r\n      })\r\n    }\r\n\r\n    else{\r\n      this.retrieveCollection();\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  /**\r\n   * Provide feedback to user after an operation has succeeded/failed\r\n   *\r\n   * @public\r\n   * @method displayAlert\r\n   * @param  title          {String}           Heading for alert message\r\n   * @param  message        {String}           Content for alert message\r\n   * @return {none}\r\n   */\r\n  displayAlert(title      : string,\r\n               message    : string) : void\r\n  {\r\n     let alert : any     = this._ALERT.create({\r\n        title      : title,\r\n        subTitle   : message,\r\n        buttons    : ['Got it!']\r\n     });\r\n     alert.present();\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/select_module/select_module.ts"],"sourceRoot":""}