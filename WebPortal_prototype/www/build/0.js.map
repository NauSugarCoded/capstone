{"version":3,"sources":["../../src/pages/select_study/select_study.module.ts","../../src/pages/select_study/select_study.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACC;AAUjD;IAAA;IAAoC,CAAC;IAAxB,qBAAqB;QARjC,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,sEAAe;aAChB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,sEAAe,CAAC;aAC1C;SACF,CAAC;OACW,qBAAqB,CAAG;IAAD,4BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACZQ;AACuC;AACP;AAEL;AACY;AAGjF;;;;;GAKG;AAOH;IAwIE,yBAAmB,OAA8B,EAC9B,MAA0B,EACzB,GAA2B,EAC3B,GAAgC,EAChC,GAAoC,EACpC,MAA+B;QALhC,YAAO,GAAP,OAAO,CAAuB;QAC9B,WAAM,GAAN,MAAM,CAAoB;QACzB,QAAG,GAAH,GAAG,CAAwB;QAC3B,QAAG,GAAH,GAAG,CAA6B;QAChC,QAAG,GAAH,GAAG,CAAiC;QACpC,WAAM,GAAN,MAAM,CAAyB;QAvHnD;;;;;WAKG;QACI,cAAS,GAA8B,EAAE,CAAC;QAIjD;;;;;WAKG;QACI,eAAU,GAAwB,EAAE,CAAC;QAI5C;;;;;WAKG;QACI,aAAQ,GAAsB,EAAE,CAAC;QAExC;;;;;WAKG;QACI,eAAU,GAAsB,EAAE,CAAC;QAE1C;;;;;WAKG;QACI,aAAQ,GAAsB,EAAE,CAAC;QAIxC;;;;;WAKG;QACI,UAAK,GAA6B,sBAAsB,CAAC;QAIhE;;;;;;WAMG;QACI,eAAU,GAAwB,KAAK,CAAC;QAI/C;;;;;WAKG;QACI,UAAK,GAAkB,iBAAiB,CAAC;QAIhD;;;;;WAKG;QACK,UAAK,GAAiB,SAAS,CAAC;QAuCrC,mDAAmD;QACnD,oDAAoD;QACpD,+CAA+C;QAC/C,IAAI,CAAC,IAAI,GAAK,GAAG,CAAC,KAAK,CAAC;YACrB,WAAW,EAAa,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YACjD,YAAY,EAAY,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YACjD,UAAU,EAAe,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAClD,YAAY,EAAe,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YACpD,UAAU,EAAe,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAClD,SAAS,EAAiB,CAAC,EAAE,CAAC;SAChC,CAAC,CAAC;QAGH,mDAAmD;QACnD,gDAAgD;QAChD,6BAA6B;QAC7B,EAAE,EAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAC1B,CAAC;YACG,IAAI,MAAM,GAAa,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAE5C,IAAI,CAAC,SAAS,GAAe,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC;YACvD,IAAI,CAAC,UAAU,GAAQ,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;YAClD,IAAI,CAAC,QAAQ,GAAQ,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAC9C,IAAI,CAAC,UAAU,GAAQ,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;YAClD,IAAI,CAAC,QAAQ,GAAQ,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAC9C,IAAI,CAAC,KAAK,GAAc,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC;YAC3C,IAAI,CAAC,UAAU,GAAS,IAAI,CAAC;YAC7B,IAAI,CAAC,KAAK,GAAc,sBAAsB,CAAC;QACnD,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,yCAAe,GAAf;QAEE,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;IACrC,CAAC;IAED,4CAAkB,GAAlB;QAAA,iBASC;QAPE,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;aAC9B,IAAI,CAAC,UAAC,IAAI;YAET,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAExB,CAAC,CAAC;aACD,KAAK,EAAE,CAAC;IACZ,CAAC;IAED;;;;;;;OAOG;IACH,+CAAqB,GAArB;QAAA,iBAQC;QANE,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC;aAC7D,IAAI,CAAC,UAAC,IAAI;YAET,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC;aACD,KAAK,EAAE,CAAC;IACZ,CAAC;IAED,yCAAe,GAAf;QAAA,iBAQC;QANC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC;aAC7B,IAAI,CAAC,UAAC,IAAI;YAET,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC;aACD,KAAK,EAAE,CAAC;IACX,CAAC;IAED,qCAAW,GAAX,UAAY,GAAG;QAAf,iBAwDC;QAtDE,IAAI,SAAS,GAAmB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,EACjE,UAAU,GAAqB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,KAAK,EACrE,QAAQ,GAAmB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,EAC/D,UAAU,GAAmB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,KAAK,EACnE,QAAQ,GAAmB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QAEpE,iEAAiE;QACjE,EAAE,EAAC,IAAI,CAAC,UAAU,CAAC,CACnB,CAAC;YAEE,qEAAqE;YACrE,iCAAiC;YACjC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EACZ,IAAI,CAAC,KAAK,EACV;gBACE,SAAS,EAAM,SAAS;gBACxB,UAAU,EAAM,UAAU;gBAC1B,QAAQ,EAAK,QAAQ;gBACrB,UAAU,EAAG,UAAU;gBACvB,QAAQ,EAAK,QAAQ;aACxB,CAAC;iBACrB,IAAI,CAAC,UAAC,IAAI;gBAER,KAAI,CAAC,YAAY,CAAC,SAAS,EAAE,YAAY,GAAI,UAAU,GAAG,2BAA2B,CAAC,CAAC;YAC1F,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAK;gBAEV,KAAI,CAAC,YAAY,CAAC,uBAAuB,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;YAC7D,CAAC,CAAC,CAAC;QACN,CAAC;QAGD,IAAI,CACJ,CAAC;YAEE,qEAAqE;YACrE,8BAA8B;YAC9B,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EACZ;gBACC,SAAS,EAAM,SAAS;gBACxB,UAAU,EAAM,UAAU;gBAC1B,QAAQ,EAAK,QAAQ;gBACrB,UAAU,EAAG,UAAU;gBACvB,QAAQ,EAAK,QAAQ;aACvB,CAAC;iBAClB,IAAI,CAAC,UAAC,IAAI;gBAER,KAAI,CAAC,YAAY,CAAC,cAAc,EAAE,YAAY,GAAI,UAAU,GAAG,yBAAyB,CAAC,CAAC;YAC7F,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAK;gBAEV,KAAI,CAAC,YAAY,CAAC,qBAAqB,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;YAC3D,CAAC,CAAC,CAAC;QACN,CAAC;IACJ,CAAC;IAEA,sCAAY,GAAZ,UAAa,GAAS;QAAtB,iBAWC;QATC,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,SAAS,EAAE,GAAG,CAAC;aAClE,IAAI,CAAC,UAAC,IAAU;YAEf,KAAI,CAAC,YAAY,CAAC,SAAS,EAAE,aAAa,GAAG,GAAG,CAAC,IAAI,GAAG,yBAAyB,CAAC,CAAC;QACrF,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAW;YAEjB,KAAI,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAY,GAAZ,UAAa,GAAG;QAEb,IAAI,MAAM,GAAS;YAChB,UAAU,EAAK,SAAS;YACxB,MAAM,EAAO,GAAG;SAClB,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,MAAM,EAAG,MAAM,EAAE,QAAQ,EAAG,IAAI,EAAE,CAAC,CAAC;IAC5E,CAAC;IAED,wCAAc,GAAd;QAAA,iBAYC;QAVE,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EACvB,IAAI,CAAC,KAAK,CAAC;aACrB,IAAI,CAAC,UAAC,IAAU;YAEd,KAAI,CAAC,YAAY,CAAC,SAAS,EAAE,YAAY,GAAG,KAAI,CAAC,UAAU,GAAG,2BAA2B,CAAC,CAAC;QAC9F,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAW;YAEhB,KAAI,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACN,CAAC;IAEF;;;;;;;;OAQG;IACH,sCAAY,GAAZ,UAAa,KAAmB,EACnB,OAAmB;QAE7B,IAAI,KAAK,GAAa,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YACtC,KAAK,EAAQ,KAAK;YAClB,QAAQ,EAAK,OAAO;YACpB,OAAO,EAAM,CAAC,SAAS,CAAC;SAC1B,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAtVU,eAAe;QAJ3B,wEAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;WACG;SACjC,CAAC;6EAyIiD;YACb,mEAAS;YACT,sFAAW;YACX,kGAAgB;YAChB,wEAAoB;YACpB,YAAe;OA7IxC,eAAe,CAyV3B;IAAD,CAAC;AAAA;SAzVY,eAAe,gB","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { SelectStudyPage } from './select_study';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SelectStudyPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(SelectStudyPage),\r\n  ],\r\n})\r\nexport class SelectStudyPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/select_study/select_study.module.ts","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormsModule } from '@angular/forms';\r\nimport { AlertController, IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { ModulesPage } from \"../modules/modules\"\r\nimport { DatabaseProvider } from '../../providers/database/database';\r\nimport { UsersserviceProvider } from '../../providers/usersservice/usersservice';\r\n\r\n\r\n/**\r\n * Generated class for the SelectStudyPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n @IonicPage({\r\n \tname: \"select_study\"\r\n })\r\n@Component({\r\n  selector: 'page-select-study',\r\n  templateUrl: 'select_study.html',\r\n})\r\nexport class SelectStudyPage {\r\n\r\n  /**\r\n   * @name form\r\n   * @type {object}\r\n   * @public\r\n   * @description     Defines an object for handling form validation\r\n   */\r\n  public form          : any;\r\n\r\n\r\n\r\n  /**\r\n   * @name records\r\n   * @type {object}\r\n   * @public\r\n   * @description     Defines an object for returning documents from Cloud Firestore database\r\n   */\r\n  public records       : any;\r\n\r\n\r\n\r\n  /**\r\n   * @name full_name\r\n   * @type {string}\r\n   * @public\r\n   * @description     Model for city form field\r\n   */\r\n  public full_name          : string          = '';\r\n\r\n\r\n\r\n  /**\r\n   * @name short_name\r\n   * @type {string}\r\n   * @public\r\n   * @description     Model for population form field\r\n   */\r\n  public short_name    : string          = '';\r\n\r\n\r\n\r\n  /**\r\n   * @name abstract\r\n   * @type {string}\r\n   * @public\r\n   * @description     Model for established form field\r\n   */\r\n  public abstract \t: string          = '';\r\n\r\n  /**\r\n   * @name start_date\r\n   * @type {date}\r\n   * @public\r\n   * @description     Model for established form field\r\n   */\r\n  public start_date \t: string           ='';\r\n\r\n  /**\r\n   * @name end_date\r\n   * @type {date}\r\n   * @public\r\n   * @description     Model for established form field\r\n   */\r\n  public end_date \t: string           ='';\r\n\r\n\r\n\r\n  /**\r\n   * @name docID\r\n   * @type {string}\r\n   * @public\r\n   * @description     property that stores an edited document's ID\r\n   */\r\n  public docID         : string          = '81XU1moWva6onAtMHpYY';\r\n\r\n\r\n\r\n  /**\r\n   * @name isEditable\r\n   * @type {boolean}\r\n   * @public\r\n   * @description     property that stores value to signify whether\r\n                      we are editing an existing document or not\r\n   */\r\n  public isEditable    : boolean         = false;\r\n\r\n\r\n\r\n  /**\r\n   * @name title\r\n   * @type {string}\r\n   * @public\r\n   * @description     property that defines the template title value\r\n   */\r\n  public title \t\t: string\t\t   = 'Add a new Study';\r\n\r\n\r\n\r\n  /**\r\n   * @name _COLL\r\n   * @type {string}\r\n   * @private\r\n   * @description     property that stores the value for the database collection\r\n   */\r\n  private _COLL \t\t: string \t\t\t= \"Studies\";\r\n\r\n  /**\r\n   * @name modules\r\n   * @type {any}\r\n   * @public\r\n   * @description      Property to store the returned documents from the database collection\r\n   */\r\n  public modules     : any;\r\n\r\n  /**\r\n   * @name locations\r\n   * @type {any}\r\n   * @public\r\n   * @description      Property to store the returned documents from the database collection\r\n   */\r\n  public locations     : any;\r\n\r\n\r\n  /**\r\n   * @name mods\r\n   * @type {any}\r\n   * @public\r\n   * @description      Property to store the returned documents from the database collection\r\n   */\r\n  public mods     : any;\r\n\r\n  public email    : string;\r\n\r\n\r\n\r\n  constructor(public navCtrl        : NavController,\r\n              public params         : NavParams,\r\n              private _FB \t         : FormBuilder,\r\n              private _DB           : DatabaseProvider,\r\n              private _US           : UsersserviceProvider,\r\n              private _ALERT        : AlertController)\r\n  {\r\n\r\n     // Use Formbuilder API to create a FormGroup object\r\n     // that will be used to programmatically control the\r\n     // form / form fields in the component template\r\n     this.form \t\t= _FB.group({\r\n        'full_name' \t\t        : ['', Validators.required],\r\n        'short_name' \t        : ['', Validators.required],\r\n        'abstract'\t            : ['', Validators.required],\r\n        'start_date'\t            : ['', Validators.required],\r\n        'end_date'\t            : ['', Validators.required],\r\n        'modules'               : ['']\r\n     });\r\n\r\n\r\n     // If we have navigation parameters then we need to\r\n     // parse these as we know these will be used for\r\n     // editing an existing record\r\n     if(params.get('isEdited'))\r\n     {\r\n         let record \t\t        = params.get('record');\r\n\r\n         this.full_name\t            = record.location.full_name;\r\n         this.short_name   \t  = record.location.short_name;\r\n         this.abstract      = record.location.abstract;\r\n         this.start_date      = record.location.start_date;\r\n         this.end_date      = record.location.end_date;\r\n         this.docID            = record.location.id;\r\n         this.isEditable       = true;\r\n         this.title            = 'Update this document';\r\n     }\r\n  }\r\n\r\n  /**\r\n   * Retrieve all documents from the specified collection using the\r\n   * retrieveCollection method when the view is entered\r\n   *\r\n   * @public\r\n   * @method ionViewDidEnter\r\n   * @return {none}\r\n   */\r\n  ionViewDidEnter()\r\n  {\r\n    this.retrieveCollection();\r\n    this.retrieveSubCollection();\r\n    this.retrieveModules();\r\n    this.email = this._US.returnUser();\r\n  }\r\n\r\n  retrieveCollection() : void\r\n  {\r\n     this._DB.getStudies(this._COLL)\r\n     .then((data) =>\r\n     {\r\n       this.locations = data;\r\n\r\n     })\r\n     .catch();\r\n  }\r\n\r\n  /**\r\n   * Retrieve all documents from the specified collection using the\r\n   * getDocuments method of the DatabaseProvider service\r\n   *\r\n   * @public\r\n   * @method retrieveCollection\r\n   * @return {none}\r\n   */\r\n  retrieveSubCollection() : void\r\n  {\r\n     this._DB.getStudies_Modules(this._COLL, this.docID, \"modules\")\r\n     .then((data) =>\r\n     {\r\n       this.modules = data;\r\n     })\r\n     .catch();\r\n  }\r\n\r\n  retrieveModules() : void\r\n  {\r\n    this._DB.getModules(\"Modules\")\r\n    .then((data) =>\r\n    {\r\n      this.mods = data;\r\n    })\r\n    .catch();\r\n  }\r\n\r\n  updateStudy(obj)  : void\r\n  {\r\n     let full_name\t      : string\t\t= this.form.controls[\"full_name\"].value,\r\n         short_name        : string \t\t= this.form.controls[\"short_name\"].value,\r\n         abstract       : string\t\t= this.form.controls[\"abstract\"].value,\r\n         start_date       : string\t\t= this.form.controls[\"start_date\"].value,\r\n         end_date       : string\t\t= this.form.controls[\"end_date\"].value;\r\n\r\n     // If we are editing an existing record then handle this scenario\r\n     if(this.isEditable)\r\n     {\r\n\r\n        // Call the DatabaseProvider service and pass/format the data for use\r\n        // with the updateDocument method\r\n        this._DB.updateDocument(this._COLL,\r\n                              this.docID,\r\n                              {\r\n                                full_name    : full_name,\r\n                                short_name    : short_name,\r\n                                abstract   : abstract,\r\n                                start_date\t: start_date,\r\n                                end_date   : end_date\r\n                            })\r\n        .then((data) =>\r\n        {\r\n           this.displayAlert('Success', 'The study ' +  short_name + ' was successfully updated');\r\n        })\r\n        .catch((error) =>\r\n        {\r\n           this.displayAlert('Updating study failed', error.message);\r\n        });\r\n     }\r\n\r\n     // Otherwise we are adding a new record\r\n     else\r\n     {\r\n\r\n        // Call the DatabaseProvider service and pass/format the data for use\r\n        // with the addDocument method\r\n        this._DB.addDocument(this._COLL,\r\n                           {\r\n                            full_name    : full_name,\r\n                            short_name    : short_name,\r\n                            abstract   : abstract,\r\n                            start_date\t: start_date,\r\n                            end_date   : end_date\r\n                         })\r\n        .then((data) =>\r\n        {\r\n           this.displayAlert('Record added', 'The study ' +  short_name + ' was successfully added');\r\n        })\r\n        .catch((error) =>\r\n        {\r\n           this.displayAlert('Adding study failed', error.message);\r\n        });\r\n     }\r\n  }\r\n\r\n   saveDocument(val : any)\r\n   {\r\n     this._DB.addStudies_Modules(this._COLL, this.docID, \"modules\", val)\r\n     .then((data : any) =>\r\n     {\r\n       this.displayAlert('Success', 'The module ' + val.name + ' was successfully added');\r\n     })\r\n     .catch((error : any) =>\r\n     {\r\n       this.displayAlert('Error', error.message);\r\n     });\r\n   }\r\n\r\n   viewDocument(obj) : void\r\n   {\r\n      let params : any = {\r\n         collection   : \"modules\",\r\n         module     : obj\r\n      };\r\n      this.navCtrl.push('select_module', { record : params, isEdited : true });\r\n   }\r\n\r\n   deleteDocument() : void\r\n   {\r\n      this._DB.deleteDocument(this._COLL,\r\n                 this.docID)\r\n      .then((data : any) =>\r\n      {\r\n         this.displayAlert('Success', 'The study ' + this.short_name + ' was successfully removed');\r\n      })\r\n      .catch((error : any) =>\r\n      {\r\n         this.displayAlert('Error', error.message);\r\n      });\r\n   }\r\n\r\n  /**\r\n   * Provide feedback to user after an operation has succeeded/failed\r\n   *\r\n   * @public\r\n   * @method displayAlert\r\n   * @param  title          {String}           Heading for alert message\r\n   * @param  message        {String}           Content for alert message\r\n   * @return {none}\r\n   */\r\n  displayAlert(title      : string,\r\n               message    : string) : void\r\n  {\r\n     let alert : any     = this._ALERT.create({\r\n        title      : title,\r\n        subTitle   : message,\r\n        buttons    : ['Got it!']\r\n     });\r\n     alert.present();\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/select_study/select_study.ts"],"sourceRoot":""}